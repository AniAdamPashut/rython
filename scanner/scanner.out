
running 1 test
Tokens: 
Token { val: "import", lineno: 0, start: 0, end: 6, indent: 0, kind: Keyword }
Token { val: "socket", lineno: 0, start: 7, end: 13, indent: 0, kind: Name }
Token { val: "from", lineno: 1, start: 0, end: 4, indent: 0, kind: Keyword }
Token { val: "typing", lineno: 1, start: 5, end: 11, indent: 0, kind: Name }
Token { val: "import", lineno: 1, start: 12, end: 18, indent: 0, kind: Keyword }
Token { val: "Callable", lineno: 1, start: 19, end: 27, indent: 0, kind: Name }
Token { val: "def", lineno: 3, start: 0, end: 3, indent: 0, kind: Keyword }
Token { val: "endpoint", lineno: 3, start: 4, end: 12, indent: 0, kind: Name }
Token { val: "(", lineno: 3, start: 12, end: 13, indent: 0, kind: Separator }
Token { val: "ep", lineno: 3, start: 13, end: 15, indent: 0, kind: Name }
Token { val: ":", lineno: 3, start: 15, end: 16, indent: 0, kind: Separator }
Token { val: "str", lineno: 3, start: 17, end: 20, indent: 0, kind: Name }
Token { val: ")", lineno: 3, start: 20, end: 21, indent: 0, kind: Separator }
Token { val: ":", lineno: 3, start: 21, end: 22, indent: 0, kind: Separator }
Token { val: "def", lineno: 4, start: 4, end: 7, indent: 4, kind: Keyword }
Token { val: "inner", lineno: 4, start: 8, end: 13, indent: 4, kind: Name }
Token { val: "(", lineno: 4, start: 13, end: 14, indent: 4, kind: Separator }
Token { val: "method", lineno: 4, start: 14, end: 20, indent: 4, kind: Name }
Token { val: ")", lineno: 4, start: 20, end: 21, indent: 4, kind: Separator }
Token { val: ":", lineno: 4, start: 21, end: 22, indent: 4, kind: Separator }
Token { val: "setattr", lineno: 5, start: 8, end: 15, indent: 8, kind: Name }
Token { val: "(", lineno: 5, start: 15, end: 16, indent: 8, kind: Separator }
Token { val: "method", lineno: 5, start: 16, end: 22, indent: 8, kind: Name }
Token { val: ",", lineno: 5, start: 22, end: 23, indent: 8, kind: Separator }
Token { val: "\"registered\"", lineno: 5, start: 24, end: 36, indent: 8, kind: Literal(String) }
Token { val: ",", lineno: 5, start: 36, end: 37, indent: 8, kind: Separator }
Token { val: "True", lineno: 5, start: 38, end: 42, indent: 8, kind: Literal(Boolean) }
Token { val: ")", lineno: 5, start: 42, end: 43, indent: 8, kind: Separator }
Token { val: "setattr", lineno: 6, start: 8, end: 15, indent: 8, kind: Name }
Token { val: "(", lineno: 6, start: 15, end: 16, indent: 8, kind: Separator }
Token { val: "method", lineno: 6, start: 16, end: 22, indent: 8, kind: Name }
Token { val: ",", lineno: 6, start: 22, end: 23, indent: 8, kind: Separator }
Token { val: "\"endpoint\"", lineno: 6, start: 24, end: 34, indent: 8, kind: Literal(String) }
Token { val: ",", lineno: 6, start: 34, end: 35, indent: 8, kind: Separator }
Token { val: "ep", lineno: 6, start: 36, end: 38, indent: 8, kind: Name }
Token { val: ")", lineno: 6, start: 38, end: 39, indent: 8, kind: Separator }
Token { val: "return", lineno: 7, start: 8, end: 14, indent: 8, kind: Keyword }
Token { val: "method", lineno: 7, start: 15, end: 21, indent: 8, kind: Name }
Token { val: "return", lineno: 9, start: 4, end: 10, indent: 4, kind: Keyword }
Token { val: "inner", lineno: 9, start: 11, end: 16, indent: 4, kind: Name }
Token { val: "class", lineno: 11, start: 0, end: 5, indent: 0, kind: Keyword }
Token { val: "Server", lineno: 11, start: 6, end: 12, indent: 0, kind: Name }
Token { val: ":", lineno: 11, start: 12, end: 13, indent: 0, kind: Separator }
Token { val: "def", lineno: 12, start: 4, end: 7, indent: 4, kind: Keyword }
Token { val: "__init__", lineno: 12, start: 8, end: 16, indent: 4, kind: Name }
Token { val: "(", lineno: 12, start: 16, end: 17, indent: 4, kind: Separator }
Token { val: "self", lineno: 12, start: 17, end: 21, indent: 4, kind: Name }
Token { val: ",", lineno: 12, start: 21, end: 22, indent: 4, kind: Separator }
Token { val: "ip", lineno: 12, start: 23, end: 25, indent: 4, kind: Name }
Token { val: ",", lineno: 12, start: 25, end: 26, indent: 4, kind: Separator }
Token { val: "port", lineno: 12, start: 27, end: 31, indent: 4, kind: Name }
Token { val: ")", lineno: 12, start: 31, end: 32, indent: 4, kind: Separator }
Token { val: "-", lineno: 12, start: 33, end: 34, indent: 4, kind: Operator }
Token { val: ">", lineno: 12, start: 34, end: 35, indent: 4, kind: Operator }
Token { val: "None", lineno: 12, start: 36, end: 40, indent: 4, kind: Literal(None) }
Token { val: ":", lineno: 12, start: 40, end: 41, indent: 4, kind: Separator }
Token { val: "self", lineno: 13, start: 8, end: 12, indent: 8, kind: Name }
Token { val: ".", lineno: 13, start: 12, end: 13, indent: 8, kind: Separator }
Token { val: "_socket", lineno: 13, start: 13, end: 20, indent: 8, kind: Name }
Token { val: "=", lineno: 13, start: 21, end: 22, indent: 8, kind: Operator }
Token { val: "socket", lineno: 13, start: 23, end: 29, indent: 8, kind: Name }
Token { val: ".", lineno: 13, start: 29, end: 30, indent: 8, kind: Separator }
Token { val: "socket", lineno: 13, start: 30, end: 36, indent: 8, kind: Name }
Token { val: "(", lineno: 13, start: 36, end: 37, indent: 8, kind: Separator }
Token { val: ")", lineno: 13, start: 37, end: 38, indent: 8, kind: Separator }
Token { val: "self", lineno: 14, start: 8, end: 12, indent: 8, kind: Name }
Token { val: ".", lineno: 14, start: 12, end: 13, indent: 8, kind: Separator }
Token { val: "_socket", lineno: 14, start: 13, end: 20, indent: 8, kind: Name }
Token { val: ".", lineno: 14, start: 20, end: 21, indent: 8, kind: Separator }
Token { val: "bind", lineno: 14, start: 21, end: 25, indent: 8, kind: Name }
Token { val: "(", lineno: 14, start: 25, end: 26, indent: 8, kind: Separator }
Token { val: "(", lineno: 14, start: 26, end: 27, indent: 8, kind: Separator }
Token { val: "ip", lineno: 14, start: 27, end: 29, indent: 8, kind: Name }
Token { val: ",", lineno: 14, start: 29, end: 30, indent: 8, kind: Separator }
Token { val: "port", lineno: 14, start: 31, end: 35, indent: 8, kind: Name }
Token { val: ")", lineno: 14, start: 35, end: 36, indent: 8, kind: Separator }
Token { val: ")", lineno: 14, start: 36, end: 37, indent: 8, kind: Separator }
Token { val: "self", lineno: 15, start: 8, end: 12, indent: 8, kind: Name }
Token { val: ".", lineno: 15, start: 12, end: 13, indent: 8, kind: Separator }
Token { val: "_socket", lineno: 15, start: 13, end: 20, indent: 8, kind: Name }
Token { val: ".", lineno: 15, start: 20, end: 21, indent: 8, kind: Separator }
Token { val: "listen", lineno: 15, start: 21, end: 27, indent: 8, kind: Name }
Token { val: "(", lineno: 15, start: 27, end: 28, indent: 8, kind: Separator }
Token { val: ")", lineno: 15, start: 28, end: 29, indent: 8, kind: Separator }
Token { val: "self", lineno: 17, start: 8, end: 12, indent: 8, kind: Name }
Token { val: ".", lineno: 17, start: 12, end: 13, indent: 8, kind: Separator }
Token { val: "_endpoints", lineno: 17, start: 13, end: 23, indent: 8, kind: Name }
Token { val: ":", lineno: 17, start: 23, end: 24, indent: 8, kind: Separator }
Token { val: "dict", lineno: 17, start: 25, end: 29, indent: 8, kind: Name }
Token { val: "[", lineno: 17, start: 29, end: 30, indent: 8, kind: Separator }
Token { val: "str", lineno: 17, start: 30, end: 33, indent: 8, kind: Name }
Token { val: ",", lineno: 17, start: 33, end: 34, indent: 8, kind: Separator }
Token { val: "Callable", lineno: 17, start: 35, end: 43, indent: 8, kind: Name }
Token { val: "]", lineno: 17, start: 43, end: 44, indent: 8, kind: Separator }
Token { val: "=", lineno: 17, start: 45, end: 46, indent: 8, kind: Operator }
Token { val: "dict", lineno: 17, start: 47, end: 51, indent: 8, kind: Name }
Token { val: "(", lineno: 17, start: 51, end: 52, indent: 8, kind: Separator }
Token { val: ")", lineno: 17, start: 52, end: 53, indent: 8, kind: Separator }
Token { val: "for", lineno: 18, start: 8, end: 11, indent: 8, kind: Keyword }
Token { val: "item", lineno: 18, start: 12, end: 16, indent: 8, kind: Name }
Token { val: "in", lineno: 18, start: 17, end: 19, indent: 8, kind: Keyword }
Token { val: "self", lineno: 18, start: 20, end: 24, indent: 8, kind: Name }
Token { val: ".", lineno: 18, start: 24, end: 25, indent: 8, kind: Separator }
Token { val: "__dir__", lineno: 18, start: 25, end: 32, indent: 8, kind: Name }
Token { val: "(", lineno: 18, start: 32, end: 33, indent: 8, kind: Separator }
Token { val: ")", lineno: 18, start: 33, end: 34, indent: 8, kind: Separator }
Token { val: ":", lineno: 18, start: 34, end: 35, indent: 8, kind: Separator }
Token { val: "if", lineno: 19, start: 12, end: 14, indent: 12, kind: Keyword }
Token { val: "callable", lineno: 19, start: 15, end: 23, indent: 12, kind: Name }
Token { val: "(", lineno: 19, start: 23, end: 24, indent: 12, kind: Separator }
Token { val: "item", lineno: 19, start: 24, end: 28, indent: 12, kind: Name }
Token { val: ")", lineno: 19, start: 28, end: 29, indent: 12, kind: Separator }
Token { val: "and", lineno: 19, start: 30, end: 33, indent: 12, kind: Keyword }
Token { val: "getattr", lineno: 19, start: 34, end: 41, indent: 12, kind: Name }
Token { val: "(", lineno: 19, start: 41, end: 42, indent: 12, kind: Separator }
Token { val: "item", lineno: 19, start: 42, end: 46, indent: 12, kind: Name }
Token { val: ",", lineno: 19, start: 46, end: 47, indent: 12, kind: Separator }
Token { val: "'registered'", lineno: 19, start: 48, end: 60, indent: 12, kind: Literal(String) }
Token { val: ",", lineno: 19, start: 60, end: 61, indent: 12, kind: Separator }
Token { val: "False", lineno: 19, start: 62, end: 67, indent: 12, kind: Literal(Boolean) }
Token { val: ")", lineno: 19, start: 67, end: 68, indent: 12, kind: Separator }
Token { val: ":", lineno: 19, start: 68, end: 69, indent: 12, kind: Separator }
Token { val: "self", lineno: 20, start: 16, end: 20, indent: 16, kind: Name }
Token { val: ".", lineno: 20, start: 20, end: 21, indent: 16, kind: Separator }
Token { val: "_endpoints", lineno: 20, start: 21, end: 31, indent: 16, kind: Name }
Token { val: "[", lineno: 20, start: 31, end: 32, indent: 16, kind: Separator }
Token { val: "getattr", lineno: 20, start: 32, end: 39, indent: 16, kind: Name }
Token { val: "(", lineno: 20, start: 39, end: 40, indent: 16, kind: Separator }
Token { val: "item", lineno: 20, start: 40, end: 44, indent: 16, kind: Name }
Token { val: ",", lineno: 20, start: 44, end: 45, indent: 16, kind: Separator }
Token { val: "'endpoint'", lineno: 20, start: 46, end: 56, indent: 16, kind: Literal(String) }
Token { val: ")", lineno: 20, start: 56, end: 57, indent: 16, kind: Separator }
Token { val: "]", lineno: 20, start: 57, end: 58, indent: 16, kind: Separator }
Token { val: "=", lineno: 20, start: 59, end: 60, indent: 16, kind: Operator }
Token { val: "item", lineno: 20, start: 61, end: 65, indent: 16, kind: Name }
Token { val: "def", lineno: 22, start: 4, end: 7, indent: 4, kind: Keyword }
Token { val: "start", lineno: 22, start: 8, end: 13, indent: 4, kind: Name }
Token { val: "(", lineno: 22, start: 13, end: 14, indent: 4, kind: Separator }
Token { val: "self", lineno: 22, start: 14, end: 18, indent: 4, kind: Name }
Token { val: ")", lineno: 22, start: 18, end: 19, indent: 4, kind: Separator }
Token { val: ":", lineno: 22, start: 19, end: 20, indent: 4, kind: Separator }
Token { val: "while", lineno: 23, start: 8, end: 13, indent: 8, kind: Keyword }
Token { val: "True", lineno: 23, start: 14, end: 18, indent: 8, kind: Literal(Boolean) }
Token { val: ":", lineno: 23, start: 18, end: 19, indent: 8, kind: Separator }
Token { val: "client", lineno: 24, start: 12, end: 18, indent: 12, kind: Name }
Token { val: ",", lineno: 24, start: 18, end: 19, indent: 12, kind: Separator }
Token { val: "addr", lineno: 24, start: 20, end: 24, indent: 12, kind: Name }
Token { val: "=", lineno: 24, start: 25, end: 26, indent: 12, kind: Operator }
Token { val: "self", lineno: 24, start: 27, end: 31, indent: 12, kind: Name }
Token { val: ".", lineno: 24, start: 31, end: 32, indent: 12, kind: Separator }
Token { val: "_socket", lineno: 24, start: 32, end: 39, indent: 12, kind: Name }
Token { val: ".", lineno: 24, start: 39, end: 40, indent: 12, kind: Separator }
Token { val: "accept", lineno: 24, start: 40, end: 46, indent: 12, kind: Name }
Token { val: "(", lineno: 24, start: 46, end: 47, indent: 12, kind: Separator }
Token { val: ")", lineno: 24, start: 47, end: 48, indent: 12, kind: Separator }
Token { val: "print", lineno: 25, start: 12, end: 17, indent: 12, kind: Name }
Token { val: "(", lineno: 25, start: 17, end: 18, indent: 12, kind: Separator }
Token { val: "\"Client connected from:\"", lineno: 25, start: 18, end: 42, indent: 12, kind: Literal(String) }
Token { val: ",", lineno: 25, start: 42, end: 43, indent: 12, kind: Separator }
Token { val: "addr", lineno: 25, start: 44, end: 48, indent: 12, kind: Name }
Token { val: ")", lineno: 25, start: 48, end: 49, indent: 12, kind: Separator }
Token { val: "self", lineno: 26, start: 12, end: 16, indent: 12, kind: Name }
Token { val: ".", lineno: 26, start: 16, end: 17, indent: 12, kind: Separator }
Token { val: "_handle_client", lineno: 26, start: 17, end: 31, indent: 12, kind: Name }
Token { val: "(", lineno: 26, start: 31, end: 32, indent: 12, kind: Separator }
Token { val: "client", lineno: 26, start: 32, end: 38, indent: 12, kind: Name }
Token { val: ")", lineno: 26, start: 38, end: 39, indent: 12, kind: Separator }
Token { val: "def", lineno: 28, start: 4, end: 7, indent: 4, kind: Keyword }
Token { val: "_handle_client", lineno: 28, start: 8, end: 22, indent: 4, kind: Name }
Token { val: "(", lineno: 28, start: 22, end: 23, indent: 4, kind: Separator }
Token { val: "self", lineno: 28, start: 23, end: 27, indent: 4, kind: Name }
Token { val: ",", lineno: 28, start: 27, end: 28, indent: 4, kind: Separator }
Token { val: "client", lineno: 28, start: 29, end: 35, indent: 4, kind: Name }
Token { val: ")", lineno: 28, start: 35, end: 36, indent: 4, kind: Separator }
Token { val: ":", lineno: 28, start: 36, end: 37, indent: 4, kind: Separator }
Token { val: "request", lineno: 29, start: 8, end: 15, indent: 8, kind: Name }
Token { val: "=", lineno: 29, start: 16, end: 17, indent: 8, kind: Operator }
Token { val: "self", lineno: 29, start: 18, end: 22, indent: 8, kind: Name }
Token { val: ".", lineno: 29, start: 22, end: 23, indent: 8, kind: Separator }
Token { val: "_extract_request", lineno: 29, start: 23, end: 39, indent: 8, kind: Name }
Token { val: "(", lineno: 29, start: 39, end: 40, indent: 8, kind: Separator }
Token { val: "client", lineno: 29, start: 40, end: 46, indent: 8, kind: Name }
Token { val: ")", lineno: 29, start: 46, end: 47, indent: 8, kind: Separator }
Token { val: "endpoint", lineno: 30, start: 8, end: 16, indent: 8, kind: Name }
Token { val: "=", lineno: 30, start: 17, end: 18, indent: 8, kind: Operator }
Token { val: "request", lineno: 30, start: 19, end: 26, indent: 8, kind: Name }
Token { val: ".", lineno: 30, start: 26, end: 27, indent: 8, kind: Separator }
Token { val: "split", lineno: 30, start: 27, end: 32, indent: 8, kind: Name }
Token { val: "(", lineno: 30, start: 32, end: 33, indent: 8, kind: Separator }
Token { val: ")", lineno: 30, start: 33, end: 34, indent: 8, kind: Separator }
Token { val: "[", lineno: 30, start: 34, end: 35, indent: 8, kind: Separator }
Token { val: "1", lineno: 30, start: 35, end: 36, indent: 8, kind: Literal(Number) }
Token { val: "]", lineno: 30, start: 36, end: 37, indent: 8, kind: Separator }
Token { val: "self", lineno: 31, start: 8, end: 12, indent: 8, kind: Name }
Token { val: ".", lineno: 31, start: 12, end: 13, indent: 8, kind: Separator }
Token { val: "_endpoints", lineno: 31, start: 13, end: 23, indent: 8, kind: Name }
Token { val: "[", lineno: 31, start: 23, end: 24, indent: 8, kind: Separator }
Token { val: "endpoint", lineno: 31, start: 24, end: 32, indent: 8, kind: Name }
Token { val: "]", lineno: 31, start: 32, end: 33, indent: 8, kind: Separator }
Token { val: "(", lineno: 31, start: 33, end: 34, indent: 8, kind: Separator }
Token { val: "request", lineno: 31, start: 34, end: 41, indent: 8, kind: Name }
Token { val: ")", lineno: 31, start: 41, end: 42, indent: 8, kind: Separator }
test tests::lexer ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 3 filtered out; finished in 0.68s

