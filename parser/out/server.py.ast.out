Module(
  body=[
    Import(
      names=[
        alias(name='os')]),
    Import(
      names=[
        alias(name='random')]),
    Import(
      names=[
        alias(name='socket')]),
    Import(
      names=[
        alias(name='string')]),
    Import(
      names=[
        alias(name='fetch')]),
    Import(
      names=[
        alias(name='sys')]),
    Import(
      names=[
        alias(name='threading')]),
    Import(
      names=[
        alias(name='hashlib')]),
    Import(
      names=[
        alias(name='rsa')]),
    Import(
      names=[
        alias(name='Database')]),
    Import(
      names=[
        alias(name='Mailing')]),
    Import(
      names=[
        alias(name='dotenv')]),
    Import(
      names=[
        alias(name='time')]),
    Import(
      names=[
        alias(name='datetime')]),
    Import(
      names=[
        alias(name='Recognize')]),
    Import(
      names=[
        alias(name='base64')]),
    ImportFrom(
      module='cryptography.hazmat.primitives.ciphers',
      names=[
        alias(name='Cipher'),
        alias(name='algorithms'),
        alias(name='modes')],
      level=0),
    ImportFrom(
      module='cryptography.hazmat.primitives',
      names=[
        alias(name='padding')],
      level=0),
    Assign(
      targets=[
        Name(id='CONFIG', ctx=Store())],
      value=Call(
        func=Attribute(
          value=Name(id='dotenv', ctx=Load()),
          attr='dotenv_values',
          ctx=Load()),
        args=[
          Constant(value='src/.env')],
        keywords=[])),
    FunctionDef(
      name='protocol',
      args=arguments(
        posonlyargs=[],
        args=[
          arg(arg='name')],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      body=[
        FunctionDef(
          name='inner',
          args=arguments(
            posonlyargs=[],
            args=[
              arg(arg='method')],
            kwonlyargs=[],
            kw_defaults=[],
            defaults=[]),
          body=[
            Expr(
              value=Call(
                func=Name(id='setattr', ctx=Load()),
                args=[
                  Name(id='method', ctx=Load()),
                  Constant(value='registered'),
                  Constant(value=True)],
                keywords=[])),
            Expr(
              value=Call(
                func=Name(id='setattr', ctx=Load()),
                args=[
                  Name(id='method', ctx=Load()),
                  Constant(value='name'),
                  Name(id='name', ctx=Load())],
                keywords=[])),
            Return(
              value=Name(id='method', ctx=Load()))],
          decorator_list=[]),
        Return(
          value=Name(id='inner', ctx=Load()))],
      decorator_list=[]),
    Assign(
      targets=[
        Name(id='RSA_PUBLIC_KEY', ctx=Store())],
      value=Constant(value='rsa_public_key')),
    Assign(
      targets=[
        Name(id='RSA_PRIVATE_KEY', ctx=Store())],
      value=Constant(value='rsa_private_key')),
    Assign(
      targets=[
        Name(id='AUTHORIZATION_CODE', ctx=Store())],
      value=Constant(value='authorization_code')),
    Assign(
      targets=[
        Name(id='AUTHENTICATION_TOKEN', ctx=Store())],
      value=Constant(value='authentication_token')),
    Assign(
      targets=[
        Name(id='SEP', ctx=Store())],
      value=Constant(value=b'8===D<')),
    Assign(
      targets=[
        Name(id='MESSAGE_END', ctx=Store())],
      value=Constant(value=b'###')),
    Assign(
      targets=[
        Name(id='MESSAGE_HALF', ctx=Store())],
      value=Constant(value=b'!==!')),
    FunctionDef(
      name='extract_parameters',
      args=arguments(
        posonlyargs=[],
        args=[
          arg(
            arg='data',
            annotation=Name(id='bytes', ctx=Load()))],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      body=[
        Assign(
          targets=[
            Name(id='request_parameters', ctx=Store())],
          value=Dict(keys=[], values=[])),
        For(
          target=Name(id='parameter', ctx=Store()),
          iter=Call(
            func=Attribute(
              value=Name(id='data', ctx=Load()),
              attr='split',
              ctx=Load()),
            args=[
              Constant(value=b'~~~')],
            keywords=[]),
          body=[
            If(
              test=Compare(
                left=Name(id='SEP', ctx=Load()),
                ops=[
                  In()],
                comparators=[
                  Name(id='parameter', ctx=Load())]),
              body=[
                Assign(
                  targets=[
                    Name(id='parameter', ctx=Store())],
                  value=Call(
                    func=Attribute(
                      value=Name(id='parameter', ctx=Load()),
                      attr='split',
                      ctx=Load()),
                    args=[
                      Name(id='SEP', ctx=Load())],
                    keywords=[])),
                Assign(
                  targets=[
                    Tuple(
                      elts=[
                        Name(id='name', ctx=Store()),
                        Name(id='value', ctx=Store())],
                      ctx=Store())],
                  value=Name(id='parameter', ctx=Load())),
                Assign(
                  targets=[
                    Subscript(
                      value=Name(id='request_parameters', ctx=Load()),
                      slice=Call(
                        func=Attribute(
                          value=Call(
                            func=Attribute(
                              value=Name(id='base64', ctx=Load()),
                              attr='b64decode',
                              ctx=Load()),
                            args=[
                              Name(id='name', ctx=Load())],
                            keywords=[]),
                          attr='decode',
                          ctx=Load()),
                        args=[],
                        keywords=[]),
                      ctx=Store())],
                  value=Call(
                    func=Attribute(
                      value=Name(id='base64', ctx=Load()),
                      attr='b64decode',
                      ctx=Load()),
                    args=[
                      Name(id='value', ctx=Load())],
                    keywords=[]))],
              orelse=[])],
          orelse=[]),
        Return(
          value=Name(id='request_parameters', ctx=Load()))],
      decorator_list=[],
      returns=Subscript(
        value=Name(id='dict', ctx=Load()),
        slice=Tuple(
          elts=[
            Name(id='str', ctx=Load()),
            Name(id='bytes', ctx=Load())],
          ctx=Load()),
        ctx=Load())),
    FunctionDef(
      name='create_message',
      args=arguments(
        posonlyargs=[],
        args=[
          arg(
            arg='sender',
            annotation=Name(id='bytes', ctx=Load())),
          arg(
            arg='method',
            annotation=Name(id='bytes', ctx=Load())),
          arg(
            arg='parameters',
            annotation=Subscript(
              value=Name(id='dict', ctx=Load()),
              slice=Tuple(
                elts=[
                  Name(id='bytes', ctx=Load()),
                  Name(id='bytes', ctx=Load())],
                ctx=Load()),
              ctx=Load()))],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      body=[
        Assign(
          targets=[
            Name(id='message', ctx=Store())],
          value=BinOp(
            left=BinOp(
              left=BinOp(
                left=Name(id='sender', ctx=Load()),
                op=Add(),
                right=Constant(value=b' ')),
              op=Add(),
              right=Name(id='method', ctx=Load())),
            op=Add(),
            right=Constant(value=b'~~~'))),
        For(
          target=Tuple(
            elts=[
              Name(id='key', ctx=Store()),
              Name(id='value', ctx=Store())],
            ctx=Store()),
          iter=Call(
            func=Attribute(
              value=Name(id='parameters', ctx=Load()),
              attr='items',
              ctx=Load()),
            args=[],
            keywords=[]),
          body=[
            AugAssign(
              target=Name(id='message', ctx=Store()),
              op=Add(),
              value=BinOp(
                left=BinOp(
                  left=BinOp(
                    left=Call(
                      func=Attribute(
                        value=Name(id='base64', ctx=Load()),
                        attr='b64encode',
                        ctx=Load()),
                      args=[
                        Name(id='key', ctx=Load())],
                      keywords=[]),
                    op=Add(),
                    right=Name(id='SEP', ctx=Load())),
                  op=Add(),
                  right=Call(
                    func=Attribute(
                      value=Name(id='base64', ctx=Load()),
                      attr='b64encode',
                      ctx=Load()),
                    args=[
                      Name(id='value', ctx=Load())],
                    keywords=[])),
                op=Add(),
                right=Constant(value=b'~~~')))],
          orelse=[]),
        AugAssign(
          target=Name(id='message', ctx=Store()),
          op=Add(),
          value=Name(id='MESSAGE_END', ctx=Load())),
        Return(
          value=Name(id='message', ctx=Load()))],
      decorator_list=[]),
    FunctionDef(
      name='generate_random_string',
      args=arguments(
        posonlyargs=[],
        args=[
          arg(
            arg='length',
            annotation=Name(id='int', ctx=Load()))],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      body=[
        Return(
          value=Call(
            func=Attribute(
              value=Constant(value=''),
              attr='join',
              ctx=Load()),
            args=[
              GeneratorExp(
                elt=Call(
                  func=Attribute(
                    value=Name(id='random', ctx=Load()),
                    attr='choice',
                    ctx=Load()),
                  args=[
                    BinOp(
                      left=Attribute(
                        value=Name(id='string', ctx=Load()),
                        attr='ascii_letters',
                        ctx=Load()),
                      op=Add(),
                      right=Attribute(
                        value=Name(id='string', ctx=Load()),
                        attr='digits',
                        ctx=Load()))],
                  keywords=[]),
                generators=[
                  comprehension(
                    target=Name(id='_', ctx=Store()),
                    iter=Call(
                      func=Name(id='range', ctx=Load()),
                      args=[
                        Name(id='length', ctx=Load())],
                      keywords=[]),
                    ifs=[],
                    is_async=0)])],
            keywords=[]))],
      decorator_list=[]),
    ClassDef(
      name='Server',
      bases=[],
      keywords=[],
      body=[
        Assign(
          targets=[
            Name(id='CLIENT_LIMIT', ctx=Store())],
          value=Constant(value=100)),
        Assign(
          targets=[
            Name(id='PORT', ctx=Store())],
          value=Constant(value=1337)),
        Assign(
          targets=[
            Name(id='KNOWN_CLIENTS', ctx=Store())],
          value=Set(
            elts=[
              Constant(value=b'USER'),
              Constant(value=b'CMRA')])),
        Assign(
          targets=[
            Name(id='KNOWN_REQUESTS', ctx=Store())],
          value=Dict(keys=[], values=[])),
        FunctionDef(
          name='__init__',
          args=arguments(
            posonlyargs=[],
            args=[
              arg(arg='self')],
            kwonlyargs=[],
            kw_defaults=[],
            defaults=[]),
          body=[
            Assign(
              targets=[
                Attribute(
                  value=Name(id='self', ctx=Load()),
                  attr='_client_count',
                  ctx=Store())],
              value=Constant(value=0)),
            Assign(
              targets=[
                Name(id='sock', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='socket', ctx=Load()),
                  attr='socket',
                  ctx=Load()),
                args=[
                  Attribute(
                    value=Name(id='socket', ctx=Load()),
                    attr='AF_INET',
                    ctx=Load()),
                  Attribute(
                    value=Name(id='socket', ctx=Load()),
                    attr='SOCK_STREAM',
                    ctx=Load())],
                keywords=[])),
            If(
              test=Compare(
                left=Subscript(
                  value=Attribute(
                    value=Name(id='sys', ctx=Load()),
                    attr='platform',
                    ctx=Load()),
                  slice=Slice(
                    upper=Constant(value=5)),
                  ctx=Load()),
                ops=[
                  Eq()],
                comparators=[
                  Constant(value='linux')]),
              body=[
                Expr(
                  value=Call(
                    func=Attribute(
                      value=Name(id='sock', ctx=Load()),
                      attr='setsockopt',
                      ctx=Load()),
                    args=[
                      Attribute(
                        value=Name(id='socket', ctx=Load()),
                        attr='SOL_SOCKET',
                        ctx=Load()),
                      Attribute(
                        value=Name(id='socket', ctx=Load()),
                        attr='SO_REUSEADDR',
                        ctx=Load()),
                      Constant(value=1)],
                    keywords=[])),
                Expr(
                  value=Call(
                    func=Attribute(
                      value=Name(id='sock', ctx=Load()),
                      attr='setsockopt',
                      ctx=Load()),
                    args=[
                      Attribute(
                        value=Name(id='socket', ctx=Load()),
                        attr='SOL_SOCKET',
                        ctx=Load()),
                      Attribute(
                        value=Name(id='socket', ctx=Load()),
                        attr='SO_REUSEPORT',
                        ctx=Load()),
                      Constant(value=1)],
                    keywords=[]))],
              orelse=[]),
            Assign(
              targets=[
                Attribute(
                  value=Name(id='self', ctx=Load()),
                  attr='_sock',
                  ctx=Store())],
              value=Name(id='sock', ctx=Load())),
            Assign(
              targets=[
                Attribute(
                  value=Name(id='self', ctx=Load()),
                  attr='_clients',
                  ctx=Store())],
              value=Dict(keys=[], values=[])),
            Assign(
              targets=[
                Name(id='mailer', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='Mailing', ctx=Load()),
                  attr='Mailer',
                  ctx=Load()),
                args=[
                  Constant(value='smtp.gmail.com'),
                  Constant(value=False)],
                keywords=[])),
            Expr(
              value=Call(
                func=Attribute(
                  value=Name(id='mailer', ctx=Load()),
                  attr='enter_credentials',
                  ctx=Load()),
                args=[
                  Subscript(
                    value=Name(id='CONFIG', ctx=Load()),
                    slice=Constant(value='MAIL_ADDR'),
                    ctx=Load()),
                  Subscript(
                    value=Name(id='CONFIG', ctx=Load()),
                    slice=Constant(value='MAIL_PASS'),
                    ctx=Load())],
                keywords=[])),
            Assign(
              targets=[
                Attribute(
                  value=Name(id='self', ctx=Load()),
                  attr='_mailer',
                  ctx=Store())],
              value=Name(id='mailer', ctx=Load())),
            For(
              target=Name(id='method', ctx=Store()),
              iter=Call(
                func=Name(id='dir', ctx=Load()),
                args=[
                  Name(id='self', ctx=Load())],
                keywords=[]),
              body=[
                Assign(
                  targets=[
                    Name(id='f', ctx=Store())],
                  value=Call(
                    func=Name(id='getattr', ctx=Load()),
                    args=[
                      Name(id='self', ctx=Load()),
                      Name(id='method', ctx=Load())],
                    keywords=[])),
                If(
                  test=BoolOp(
                    op=And(),
                    values=[
                      Call(
                        func=Name(id='callable', ctx=Load()),
                        args=[
                          Name(id='f', ctx=Load())],
                        keywords=[]),
                      Call(
                        func=Name(id='getattr', ctx=Load()),
                        args=[
                          Name(id='f', ctx=Load()),
                          Constant(value='registered'),
                          Constant(value=False)],
                        keywords=[])]),
                  body=[
                    Assign(
                      targets=[
                        Subscript(
                          value=Attribute(
                            value=Name(id='self', ctx=Load()),
                            attr='KNOWN_REQUESTS',
                            ctx=Load()),
                          slice=Call(
                            func=Name(id='getattr', ctx=Load()),
                            args=[
                              Name(id='f', ctx=Load()),
                              Constant(value='name')],
                            keywords=[]),
                          ctx=Store())],
                      value=Name(id='f', ctx=Load()))],
                  orelse=[])],
              orelse=[])],
          decorator_list=[]),
        FunctionDef(
          name='_do_handshake',
          args=arguments(
            posonlyargs=[],
            args=[
              arg(arg='self'),
              arg(arg='client_id'),
              arg(arg='client'),
              arg(arg='data')],
            kwonlyargs=[],
            kw_defaults=[],
            defaults=[]),
          body=[
            Assign(
              targets=[
                Tuple(
                  elts=[
                    Name(id='pubkey', ctx=Store()),
                    Name(id='privkey', ctx=Store())],
                  ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='rsa', ctx=Load()),
                  attr='newkeys',
                  ctx=Load()),
                args=[
                  Constant(value=1024)],
                keywords=[])),
            Assign(
              targets=[
                Subscript(
                  value=Subscript(
                    value=Attribute(
                      value=Name(id='self', ctx=Load()),
                      attr='_clients',
                      ctx=Load()),
                    slice=Name(id='client_id', ctx=Load()),
                    ctx=Load()),
                  slice=Name(id='RSA_PRIVATE_KEY', ctx=Load()),
                  ctx=Store())],
              value=Name(id='privkey', ctx=Load())),
            Assign(
              targets=[
                Name(id='request_parameters', ctx=Store())],
              value=Call(
                func=Name(id='extract_parameters', ctx=Load()),
                args=[
                  Name(id='data', ctx=Load())],
                keywords=[])),
            Assign(
              targets=[
                Name(id='n', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='int', ctx=Load()),
                  attr='from_bytes',
                  ctx=Load()),
                args=[
                  Subscript(
                    value=Name(id='request_parameters', ctx=Load()),
                    slice=Constant(value='NVALUE'),
                    ctx=Load()),
                  Constant(value='big')],
                keywords=[])),
            Assign(
              targets=[
                Name(id='e', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='int', ctx=Load()),
                  attr='from_bytes',
                  ctx=Load()),
                args=[
                  Subscript(
                    value=Name(id='request_parameters', ctx=Load()),
                    slice=Constant(value='EVALUE'),
                    ctx=Load()),
                  Constant(value='big')],
                keywords=[])),
            Assign(
              targets=[
                Name(id='client_public_key', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='rsa', ctx=Load()),
                  attr='PublicKey',
                  ctx=Load()),
                args=[
                  Name(id='n', ctx=Load()),
                  Name(id='e', ctx=Load())],
                keywords=[])),
            Expr(
              value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                  Name(id='request_parameters', ctx=Load())],
                keywords=[])),
            Try(
              body=[
                Expr(
                  value=Call(
                    func=Attribute(
                      value=Name(id='rsa', ctx=Load()),
                      attr='verify',
                      ctx=Load()),
                    args=[
                      Subscript(
                        value=Name(id='request_parameters', ctx=Load()),
                        slice=Constant(value='MESSAGE'),
                        ctx=Load()),
                      Subscript(
                        value=Name(id='request_parameters', ctx=Load()),
                        slice=Constant(value='SIGNATURE'),
                        ctx=Load()),
                      Name(id='client_public_key', ctx=Load())],
                    keywords=[]))],
              handlers=[
                ExceptHandler(
                  type=Attribute(
                    value=Attribute(
                      value=Name(id='rsa', ctx=Load()),
                      attr='pkcs1',
                      ctx=Load()),
                    attr='VerificationError',
                    ctx=Load()),
                  body=[
                    Expr(
                      value=Call(
                        func=Attribute(
                          value=Name(id='logger', ctx=Load()),
                          attr='error',
                          ctx=Load()),
                        args=[
                          Constant(value='Very bad')],
                        keywords=[]))])],
              orelse=[],
              finalbody=[]),
            Assign(
              targets=[
                Name(id='rand_message', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='os', ctx=Load()),
                  attr='urandom',
                  ctx=Load()),
                args=[
                  Constant(value=16)],
                keywords=[])),
            Assign(
              targets=[
                Name(id='signature', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='rsa', ctx=Load()),
                  attr='sign',
                  ctx=Load()),
                args=[
                  Name(id='rand_message', ctx=Load()),
                  Name(id='privkey', ctx=Load()),
                  Constant(value='SHA-256')],
                keywords=[])),
            Assign(
              targets=[
                Name(id='msg', ctx=Store())],
              value=Call(
                func=Name(id='create_message', ctx=Load()),
                args=[
                  Constant(value=b'SRVR'),
                  Constant(value=b'XOR'),
                  Dict(
                    keys=[
                      Constant(value=b'NVALUE'),
                      Constant(value=b'EVALUE'),
                      Constant(value=b'MESSAGE'),
                      Constant(value=b'SIGNATURE')],
                    values=[
                      Call(
                        func=Attribute(
                          value=Attribute(
                            value=Name(id='pubkey', ctx=Load()),
                            attr='n',
                            ctx=Load()),
                          attr='to_bytes',
                          ctx=Load()),
                        args=[
                          BinOp(
                            left=BinOp(
                              left=Call(
                                func=Attribute(
                                  value=Attribute(
                                    value=Name(id='pubkey', ctx=Load()),
                                    attr='n',
                                    ctx=Load()),
                                  attr='bit_length',
                                  ctx=Load()),
                                args=[],
                                keywords=[]),
                              op=Add(),
                              right=Constant(value=7)),
                            op=FloorDiv(),
                            right=Constant(value=8)),
                          Constant(value='big')],
                        keywords=[]),
                      Call(
                        func=Attribute(
                          value=Attribute(
                            value=Name(id='pubkey', ctx=Load()),
                            attr='e',
                            ctx=Load()),
                          attr='to_bytes',
                          ctx=Load()),
                        args=[
                          BinOp(
                            left=BinOp(
                              left=Call(
                                func=Attribute(
                                  value=Attribute(
                                    value=Name(id='pubkey', ctx=Load()),
                                    attr='n',
                                    ctx=Load()),
                                  attr='bit_length',
                                  ctx=Load()),
                                args=[],
                                keywords=[]),
                              op=Add(),
                              right=Constant(value=7)),
                            op=FloorDiv(),
                            right=Constant(value=8)),
                          Constant(value='big')],
                        keywords=[]),
                      Name(id='rand_message', ctx=Load()),
                      Name(id='signature', ctx=Load())])],
                keywords=[])),
            Expr(
              value=Call(
                func=Attribute(
                  value=Name(id='client', ctx=Load()),
                  attr='send',
                  ctx=Load()),
                args=[
                  Name(id='msg', ctx=Load())],
                keywords=[])),
            Assign(
              targets=[
                Subscript(
                  value=Subscript(
                    value=Attribute(
                      value=Name(id='self', ctx=Load()),
                      attr='_clients',
                      ctx=Load()),
                    slice=Name(id='client_id', ctx=Load()),
                    ctx=Load()),
                  slice=Name(id='RSA_PUBLIC_KEY', ctx=Load()),
                  ctx=Store())],
              value=Name(id='client_public_key', ctx=Load()))],
          decorator_list=[]),
        FunctionDef(
          name='_login',
          args=arguments(
            posonlyargs=[],
            args=[
              arg(arg='self'),
              arg(arg='client_id'),
              arg(arg='client'),
              arg(arg='data')],
            kwonlyargs=[],
            kw_defaults=[],
            defaults=[]),
          body=[
            Try(
              body=[
                Assign(
                  targets=[
                    Name(id='clients_public_key', ctx=Store())],
                  value=Subscript(
                    value=Subscript(
                      value=Attribute(
                        value=Name(id='self', ctx=Load()),
                        attr='_clients',
                        ctx=Load()),
                      slice=Name(id='client_id', ctx=Load()),
                      ctx=Load()),
                    slice=Name(id='RSA_PUBLIC_KEY', ctx=Load()),
                    ctx=Load()))],
              handlers=[
                ExceptHandler(
                  type=Name(id='KeyError', ctx=Load()),
                  name='error',
                  body=[
                    Expr(
                      value=Call(
                        func=Attribute(
                          value=Name(id='logger', ctx=Load()),
                          attr='error',
                          ctx=Load()),
                        args=[
                          Call(
                            func=Name(id='str', ctx=Load()),
                            args=[
                              Name(id='error', ctx=Load())],
                            keywords=[])],
                        keywords=[])),
                    Raise()])],
              orelse=[],
              finalbody=[]),
            Assign(
              targets=[
                Name(id='parameters', ctx=Store())],
              value=Call(
                func=Name(id='extract_parameters', ctx=Load()),
                args=[
                  Name(id='data', ctx=Load())],
                keywords=[])),
            Assign(
              targets=[
                Name(id='db', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='Database', ctx=Load()),
                  attr='PlateGateDB',
                  ctx=Load()),
                args=[],
                keywords=[])),
            Assign(
              targets=[
                Name(id='identifier', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Subscript(
                    value=Name(id='parameters', ctx=Load()),
                    slice=Constant(value='IDENTIFIER'),
                    ctx=Load()),
                  attr='decode',
                  ctx=Load()),
                args=[],
                keywords=[])),
            Assign(
              targets=[
                Name(id='password', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Subscript(
                    value=Name(id='parameters', ctx=Load()),
                    slice=Constant(value='PASSWORD'),
                    ctx=Load()),
                  attr='decode',
                  ctx=Load()),
                args=[],
                keywords=[])),
            Assign(
              targets=[
                Name(id='salt', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='db', ctx=Load()),
                  attr='select_salt',
                  ctx=Load()),
                args=[
                  Name(id='identifier', ctx=Load())],
                keywords=[])),
            Assign(
              targets=[
                Name(id='hashed_passowrd', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Call(
                    func=Attribute(
                      value=Name(id='hashlib', ctx=Load()),
                      attr='sha256',
                      ctx=Load()),
                    args=[
                      Call(
                        func=Attribute(
                          value=BinOp(
                            left=Name(id='password', ctx=Load()),
                            op=Add(),
                            right=Name(id='salt', ctx=Load())),
                          attr='encode',
                          ctx=Load()),
                        args=[],
                        keywords=[])],
                    keywords=[]),
                  attr='hexdigest',
                  ctx=Load()),
                args=[],
                keywords=[])),
            Assign(
              targets=[
                Name(id='db_hashed_password', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='db', ctx=Load()),
                  attr='get_hashed_password',
                  ctx=Load()),
                args=[
                  Constant(value='users'),
                  Name(id='identifier', ctx=Load())],
                keywords=[])),
            Assign(
              targets=[
                Name(id='succeed', ctx=Store())],
              value=Compare(
                left=Name(id='hashed_passowrd', ctx=Load()),
                ops=[
                  Eq()],
                comparators=[
                  Name(id='db_hashed_password', ctx=Load())])),
            If(
              test=Name(id='succeed', ctx=Load()),
              body=[
                Assign(
                  targets=[
                    Name(id='raw_token', ctx=Store())],
                  value=BinOp(
                    left=BinOp(
                      left=Name(id='identifier', ctx=Load()),
                      op=Add(),
                      right=Constant(value=':')),
                    op=Add(),
                    right=Name(id='password', ctx=Load()))),
                Assign(
                  targets=[
                    Name(id='token', ctx=Store())],
                  value=Call(
                    func=Attribute(
                      value=Call(
                        func=Attribute(
                          value=Name(id='hashlib', ctx=Load()),
                          attr='sha256',
                          ctx=Load()),
                        args=[
                          Call(
                            func=Attribute(
                              value=Name(id='raw_token', ctx=Load()),
                              attr='encode',
                              ctx=Load()),
                            args=[],
                            keywords=[])],
                        keywords=[]),
                      attr='hexdigest',
                      ctx=Load()),
                    args=[],
                    keywords=[])),
                Assign(
                  targets=[
                    Subscript(
                      value=Subscript(
                        value=Attribute(
                          value=Name(id='self', ctx=Load()),
                          attr='_clients',
                          ctx=Load()),
                        slice=Name(id='client_id', ctx=Load()),
                        ctx=Load()),
                      slice=Name(id='AUTHENTICATION_TOKEN', ctx=Load()),
                      ctx=Store())],
                  value=Name(id='token', ctx=Load())),
                Assign(
                  targets=[
                    Name(id='code', ctx=Store())],
                  value=Call(
                    func=Name(id='generate_random_string', ctx=Load()),
                    args=[
                      Constant(value=128)],
                    keywords=[])),
                Assign(
                  targets=[
                    Name(id='msg', ctx=Store())],
                  value=Call(
                    func=Name(id='create_message', ctx=Load()),
                    args=[
                      Constant(value=b'SRVR'),
                      Constant(value=b'LOGIN'),
                      Dict(
                        keys=[
                          Constant(value=b'SUCCESS'),
                          Constant(value=b'AUTHORIZATION_CODE')],
                        values=[
                          Call(
                            func=Attribute(
                              value=Name(id='succeed', ctx=Load()),
                              attr='to_bytes',
                              ctx=Load()),
                            args=[
                              Call(
                                func=Attribute(
                                  value=Name(id='succeed', ctx=Load()),
                                  attr='bit_length',
                                  ctx=Load()),
                                args=[],
                                keywords=[]),
                              Constant(value='big')],
                            keywords=[]),
                          Call(
                            func=Attribute(
                              value=Name(id='code', ctx=Load()),
                              attr='encode',
                              ctx=Load()),
                            args=[],
                            keywords=[])])],
                    keywords=[])),
                Assign(
                  targets=[
                    Subscript(
                      value=Subscript(
                        value=Attribute(
                          value=Name(id='self', ctx=Load()),
                          attr='_clients',
                          ctx=Load()),
                        slice=Name(id='client_id', ctx=Load()),
                        ctx=Load()),
                      slice=Name(id='AUTHORIZATION_CODE', ctx=Load()),
                      ctx=Store())],
                  value=Name(id='code', ctx=Load()))],
              orelse=[
                Assign(
                  targets=[
                    Name(id='msg', ctx=Store())],
                  value=Call(
                    func=Name(id='create_message', ctx=Load()),
                    args=[
                      Constant(value=b'SRVR'),
                      Constant(value=b'LOGIN'),
                      Dict(
                        keys=[
                          Constant(value=b'SUCCESS')],
                        values=[
                          Call(
                            func=Attribute(
                              value=Name(id='succeed', ctx=Load()),
                              attr='to_bytes',
                              ctx=Load()),
                            args=[
                              Call(
                                func=Attribute(
                                  value=Name(id='succeed', ctx=Load()),
                                  attr='bit_length',
                                  ctx=Load()),
                                args=[],
                                keywords=[]),
                              Constant(value='big')],
                            keywords=[])])],
                    keywords=[]))]),
            Assign(
              targets=[
                Name(id='encrypted', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='self', ctx=Load()),
                  attr='_prepare_message',
                  ctx=Load()),
                args=[
                  Name(id='msg', ctx=Load()),
                  Constant(value=b'LOGIN'),
                  Name(id='clients_public_key', ctx=Load())],
                keywords=[])),
            Expr(
              value=Call(
                func=Attribute(
                  value=Name(id='client', ctx=Load()),
                  attr='send',
                  ctx=Load()),
                args=[
                  Name(id='encrypted', ctx=Load())],
                keywords=[]))],
          decorator_list=[
            Call(
              func=Name(id='protocol', ctx=Load()),
              args=[
                Constant(value=b'LOGIN')],
              keywords=[])]),
        FunctionDef(
          name='_signup',
          args=arguments(
            posonlyargs=[],
            args=[
              arg(arg='self'),
              arg(arg='client_id'),
              arg(arg='client'),
              arg(arg='data')],
            kwonlyargs=[],
            kw_defaults=[],
            defaults=[]),
          body=[
            Expr(
              value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                  Constant(value='SIGNUP')],
                keywords=[])),
            Try(
              body=[
                Assign(
                  targets=[
                    Name(id='client_public_key', ctx=Store())],
                  value=Subscript(
                    value=Subscript(
                      value=Attribute(
                        value=Name(id='self', ctx=Load()),
                        attr='_clients',
                        ctx=Load()),
                      slice=Name(id='client_id', ctx=Load()),
                      ctx=Load()),
                    slice=Name(id='RSA_PUBLIC_KEY', ctx=Load()),
                    ctx=Load()))],
              handlers=[
                ExceptHandler(
                  type=Name(id='KeyError', ctx=Load()),
                  name='error',
                  body=[
                    Expr(
                      value=Call(
                        func=Attribute(
                          value=Name(id='logger', ctx=Load()),
                          attr='error',
                          ctx=Load()),
                        args=[
                          Call(
                            func=Name(id='str', ctx=Load()),
                            args=[
                              Name(id='error', ctx=Load())],
                            keywords=[])],
                        keywords=[])),
                    Return()])],
              orelse=[],
              finalbody=[]),
            Assign(
              targets=[
                Name(id='parameters', ctx=Store())],
              value=Call(
                func=Name(id='extract_parameters', ctx=Load()),
                args=[
                  Name(id='data', ctx=Load())],
                keywords=[])),
            Assign(
              targets=[
                Name(id='identifier', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Subscript(
                    value=Name(id='parameters', ctx=Load()),
                    slice=Constant(value='IDENTIFIER'),
                    ctx=Load()),
                  attr='decode',
                  ctx=Load()),
                args=[],
                keywords=[])),
            Assign(
              targets=[
                Name(id='fname', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Subscript(
                    value=Name(id='parameters', ctx=Load()),
                    slice=Constant(value='FNAME'),
                    ctx=Load()),
                  attr='decode',
                  ctx=Load()),
                args=[],
                keywords=[])),
            Assign(
              targets=[
                Name(id='lname', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Subscript(
                    value=Name(id='parameters', ctx=Load()),
                    slice=Constant(value='LNAME'),
                    ctx=Load()),
                  attr='decode',
                  ctx=Load()),
                args=[],
                keywords=[])),
            Assign(
              targets=[
                Name(id='password', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Subscript(
                    value=Name(id='parameters', ctx=Load()),
                    slice=Constant(value='PASSWORD'),
                    ctx=Load()),
                  attr='decode',
                  ctx=Load()),
                args=[],
                keywords=[])),
            Assign(
              targets=[
                Name(id='company_id', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Subscript(
                    value=Name(id='parameters', ctx=Load()),
                    slice=Constant(value='COMPANY_ID'),
                    ctx=Load()),
                  attr='decode',
                  ctx=Load()),
                args=[],
                keywords=[])),
            Assign(
              targets=[
                Name(id='email', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Subscript(
                    value=Name(id='parameters', ctx=Load()),
                    slice=Constant(value='EMAIL'),
                    ctx=Load()),
                  attr='decode',
                  ctx=Load()),
                args=[],
                keywords=[])),
            Assign(
              targets=[
                Name(id='db', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='Database', ctx=Load()),
                  attr='PlateGateDB',
                  ctx=Load()),
                args=[],
                keywords=[])),
            If(
              test=Call(
                func=Attribute(
                  value=Name(id='db', ctx=Load()),
                  attr='insert_into',
                  ctx=Load()),
                args=[
                  Constant(value='users')],
                keywords=[
                  keyword(
                    arg='id_number',
                    value=Name(id='identifier', ctx=Load())),
                  keyword(
                    arg='fname',
                    value=Name(id='fname', ctx=Load())),
                  keyword(
                    arg='lname',
                    value=Name(id='lname', ctx=Load())),
                  keyword(
                    arg='password',
                    value=Name(id='password', ctx=Load())),
                  keyword(
                    arg='company_id',
                    value=Name(id='company_id', ctx=Load())),
                  keyword(
                    arg='email',
                    value=Name(id='email', ctx=Load())),
                  keyword(
                    arg='user_state',
                    value=Constant(value=1))]),
              body=[
                Assign(
                  targets=[
                    Name(id='raw_token', ctx=Store())],
                  value=BinOp(
                    left=BinOp(
                      left=Name(id='identifier', ctx=Load()),
                      op=Add(),
                      right=Constant(value=':')),
                    op=Add(),
                    right=Name(id='password', ctx=Load()))),
                Assign(
                  targets=[
                    Name(id='token', ctx=Store())],
                  value=Call(
                    func=Attribute(
                      value=Call(
                        func=Attribute(
                          value=Name(id='hashlib', ctx=Load()),
                          attr='sha256',
                          ctx=Load()),
                        args=[
                          Call(
                            func=Attribute(
                              value=Name(id='raw_token', ctx=Load()),
                              attr='encode',
                              ctx=Load()),
                            args=[],
                            keywords=[])],
                        keywords=[]),
                      attr='hexdigest',
                      ctx=Load()),
                    args=[],
                    keywords=[])),
                Assign(
                  targets=[
                    Subscript(
                      value=Subscript(
                        value=Attribute(
                          value=Name(id='self', ctx=Load()),
                          attr='_clients',
                          ctx=Load()),
                        slice=Name(id='client_id', ctx=Load()),
                        ctx=Load()),
                      slice=Name(id='AUTHENTICATION_TOKEN', ctx=Load()),
                      ctx=Store())],
                  value=Name(id='token', ctx=Load())),
                Assign(
                  targets=[
                    Name(id='code', ctx=Store())],
                  value=Call(
                    func=Name(id='generate_random_string', ctx=Load()),
                    args=[
                      Constant(value=128)],
                    keywords=[])),
                Assign(
                  targets=[
                    Subscript(
                      value=Subscript(
                        value=Attribute(
                          value=Name(id='self', ctx=Load()),
                          attr='_clients',
                          ctx=Load()),
                        slice=Name(id='client_id', ctx=Load()),
                        ctx=Load()),
                      slice=Name(id='AUTHORIZATION_CODE', ctx=Load()),
                      ctx=Store())],
                  value=Name(id='code', ctx=Load())),
                Assign(
                  targets=[
                    Name(id='msg', ctx=Store())],
                  value=Call(
                    func=Name(id='create_message', ctx=Load()),
                    args=[
                      Constant(value=b'SRVR'),
                      Constant(value=b'SIGNUP'),
                      Dict(
                        keys=[
                          Constant(value=b'SUCCESS'),
                          Constant(value=b'AUTHORIZATION_CODE')],
                        values=[
                          Call(
                            func=Attribute(
                              value=Constant(value=True),
                              attr='to_bytes',
                              ctx=Load()),
                            args=[
                              Call(
                                func=Attribute(
                                  value=Constant(value=True),
                                  attr='bit_length',
                                  ctx=Load()),
                                args=[],
                                keywords=[]),
                              Constant(value='big')],
                            keywords=[]),
                          Call(
                            func=Attribute(
                              value=Name(id='code', ctx=Load()),
                              attr='encode',
                              ctx=Load()),
                            args=[],
                            keywords=[])])],
                    keywords=[])),
                Assign(
                  targets=[
                    Name(id='currtime', ctx=Store())],
                  value=Call(
                    func=Name(id='str', ctx=Load()),
                    args=[
                      Call(
                        func=Attribute(
                          value=Attribute(
                            value=Name(id='datetime', ctx=Load()),
                            attr='datetime',
                            ctx=Load()),
                          attr='utcnow',
                          ctx=Load()),
                        args=[],
                        keywords=[])],
                    keywords=[])),
                Expr(
                  value=Call(
                    func=Attribute(
                      value=Attribute(
                        value=Name(id='self', ctx=Load()),
                        attr='_mailer',
                        ctx=Load()),
                      attr='mailto',
                      ctx=Load()),
                    args=[
                      List(
                        elts=[
                          Name(id='email', ctx=Load())],
                        ctx=Load()),
                      Constant(value="Don't reply (PlateGate)"),
                      BinOp(
                        left=Constant(value='You signed up successfully at '),
                        op=Add(),
                        right=Name(id='currtime', ctx=Load()))],
                    keywords=[]))],
              orelse=[
                Assign(
                  targets=[
                    Name(id='msg', ctx=Store())],
                  value=Call(
                    func=Name(id='create_message', ctx=Load()),
                    args=[
                      Constant(value=b'SRVR'),
                      Constant(value=b'SIGNUP'),
                      Dict(
                        keys=[
                          Constant(value=b'SUCCESS')],
                        values=[
                          Call(
                            func=Attribute(
                              value=Constant(value=False),
                              attr='to_bytes',
                              ctx=Load()),
                            args=[
                              Call(
                                func=Attribute(
                                  value=Constant(value=False),
                                  attr='bit_length',
                                  ctx=Load()),
                                args=[],
                                keywords=[]),
                              Constant(value='big')],
                            keywords=[])])],
                    keywords=[]))]),
            Assign(
              targets=[
                Name(id='encrypted', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='self', ctx=Load()),
                  attr='_prepare_message',
                  ctx=Load()),
                args=[
                  Name(id='msg', ctx=Load()),
                  Constant(value=b'SIGNUP'),
                  Name(id='client_public_key', ctx=Load())],
                keywords=[])),
            Expr(
              value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                  Name(id='encrypted', ctx=Load())],
                keywords=[])),
            Expr(
              value=Call(
                func=Attribute(
                  value=Name(id='client', ctx=Load()),
                  attr='send',
                  ctx=Load()),
                args=[
                  Name(id='encrypted', ctx=Load())],
                keywords=[])),
            Assign(
              targets=[
                Name(id='manager_mail', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='db', ctx=Load()),
                  attr='get_manager_email_by_company_id',
                  ctx=Load()),
                args=[
                  Name(id='company_id', ctx=Load())],
                keywords=[])),
            Expr(
              value=Call(
                func=Attribute(
                  value=Attribute(
                    value=Name(id='self', ctx=Load()),
                    attr='_mailer',
                    ctx=Load()),
                  attr='mailto',
                  ctx=Load()),
                args=[
                  List(
                    elts=[
                      Name(id='manager_mail', ctx=Load())],
                    ctx=Load()),
                  Constant(value='New User Signed Into you company'),
                  JoinedStr(
                    values=[
                      Constant(value='A user with the id of '),
                      FormattedValue(
                        value=Name(id='identifier', ctx=Load()),
                        conversion=-1),
                      Constant(value=' signed up with your company id.\nyou can always remove him from the desktop app')])],
                keywords=[])),
            Expr(
              value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                  Constant(value='SIGNUP END')],
                keywords=[]))],
          decorator_list=[
            Call(
              func=Name(id='protocol', ctx=Load()),
              args=[
                Constant(value=b'SIGNUP')],
              keywords=[])]),
        FunctionDef(
          name='_user_info',
          args=arguments(
            posonlyargs=[],
            args=[
              arg(arg='self'),
              arg(arg='client_id'),
              arg(arg='client'),
              arg(arg='data')],
            kwonlyargs=[],
            kw_defaults=[],
            defaults=[]),
          body=[
            Expr(
              value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                  Constant(value='USERINFO')],
                keywords=[])),
            Try(
              body=[
                Assign(
                  targets=[
                    Name(id='client_public_key', ctx=Store())],
                  value=Subscript(
                    value=Subscript(
                      value=Attribute(
                        value=Name(id='self', ctx=Load()),
                        attr='_clients',
                        ctx=Load()),
                      slice=Name(id='client_id', ctx=Load()),
                      ctx=Load()),
                    slice=Name(id='RSA_PUBLIC_KEY', ctx=Load()),
                    ctx=Load()))],
              handlers=[
                ExceptHandler(
                  type=Name(id='KeyError', ctx=Load()),
                  name='error',
                  body=[
                    Expr(
                      value=Call(
                        func=Attribute(
                          value=Name(id='logger', ctx=Load()),
                          attr='error',
                          ctx=Load()),
                        args=[
                          Call(
                            func=Name(id='str', ctx=Load()),
                            args=[
                              Name(id='error', ctx=Load())],
                            keywords=[])],
                        keywords=[])),
                    Return()])],
              orelse=[],
              finalbody=[]),
            Assign(
              targets=[
                Name(id='parameters', ctx=Store())],
              value=Call(
                func=Name(id='extract_parameters', ctx=Load()),
                args=[
                  Name(id='data', ctx=Load())],
                keywords=[])),
            Assign(
              targets=[
                Name(id='auth_code', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Subscript(
                    value=Attribute(
                      value=Name(id='self', ctx=Load()),
                      attr='_clients',
                      ctx=Load()),
                    slice=Name(id='client_id', ctx=Load()),
                    ctx=Load()),
                  attr='pop',
                  ctx=Load()),
                args=[
                  Name(id='AUTHORIZATION_CODE', ctx=Load())],
                keywords=[])),
            If(
              test=Compare(
                left=Name(id='auth_code', ctx=Load()),
                ops=[
                  NotEq()],
                comparators=[
                  Call(
                    func=Attribute(
                      value=Subscript(
                        value=Name(id='parameters', ctx=Load()),
                        slice=Constant(value='AUTHORIZATION_CODE'),
                        ctx=Load()),
                      attr='decode',
                      ctx=Load()),
                    args=[],
                    keywords=[])]),
              body=[
                Assign(
                  targets=[
                    Name(id='msg', ctx=Store())],
                  value=Call(
                    func=Name(id='create_message', ctx=Load()),
                    args=[
                      Constant(value=b'SRVR'),
                      Constant(value=b'USERINFO'),
                      Dict(
                        keys=[
                          Constant(value=b'SUCCESS'),
                          Constant(value=b'REASON')],
                        values=[
                          Call(
                            func=Attribute(
                              value=Constant(value=False),
                              attr='to_bytes',
                              ctx=Load()),
                            args=[
                              Call(
                                func=Attribute(
                                  value=Constant(value=False),
                                  attr='bit_length',
                                  ctx=Load()),
                                args=[],
                                keywords=[]),
                              Constant(value='big')],
                            keywords=[]),
                          Constant(value=b'UNAUTHORIZED')])],
                    keywords=[])),
                Assign(
                  targets=[
                    Name(id='encrypted', ctx=Store())],
                  value=Call(
                    func=Attribute(
                      value=Name(id='self', ctx=Load()),
                      attr='_prepare_message',
                      ctx=Load()),
                    args=[
                      Name(id='msg', ctx=Load()),
                      Constant(value=b'UPDATE'),
                      Name(id='client_public_key', ctx=Load())],
                    keywords=[])),
                Expr(
                  value=Call(
                    func=Attribute(
                      value=Name(id='client', ctx=Load()),
                      attr='send',
                      ctx=Load()),
                    args=[
                      Name(id='encrypted', ctx=Load())],
                    keywords=[])),
                Expr(
                  value=Call(
                    func=Name(id='print', ctx=Load()),
                    args=[
                      Constant(value='INCORRECT AUTH CODE')],
                    keywords=[])),
                Return()],
              orelse=[]),
            Assign(
              targets=[
                Name(id='db', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='Database', ctx=Load()),
                  attr='PlateGateDB',
                  ctx=Load()),
                args=[],
                keywords=[])),
            Assign(
              targets=[
                Name(id='user', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='db', ctx=Load()),
                  attr='get_user_by_id',
                  ctx=Load()),
                args=[
                  Call(
                    func=Attribute(
                      value=Subscript(
                        value=Name(id='parameters', ctx=Load()),
                        slice=Constant(value='IDENTIFIER'),
                        ctx=Load()),
                      attr='decode',
                      ctx=Load()),
                    args=[],
                    keywords=[])],
                keywords=[])),
            Assign(
              targets=[
                Tuple(
                  elts=[
                    Name(id='company_name', ctx=Store()),
                    Name(id='company_id', ctx=Store())],
                  ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='db', ctx=Load()),
                  attr='get_company_by_user_id',
                  ctx=Load()),
                args=[
                  Call(
                    func=Attribute(
                      value=Subscript(
                        value=Name(id='parameters', ctx=Load()),
                        slice=Constant(value='IDENTIFIER'),
                        ctx=Load()),
                      attr='decode',
                      ctx=Load()),
                    args=[],
                    keywords=[])],
                keywords=[])),
            If(
              test=Compare(
                left=Call(
                  func=Name(id='int', ctx=Load()),
                  args=[
                    Subscript(
                      value=Name(id='user', ctx=Load()),
                      slice=Constant(value='user_state'),
                      ctx=Load())],
                  keywords=[]),
                ops=[
                  Lt()],
                comparators=[
                  Constant(value=0)]),
              body=[
                Assign(
                  targets=[
                    Name(id='msg', ctx=Store())],
                  value=Call(
                    func=Name(id='create_message', ctx=Load()),
                    args=[
                      Constant(value=b'SRVR'),
                      Constant(value=b'USERINFO'),
                      Dict(
                        keys=[
                          Constant(value=b'SUCCESS'),
                          Constant(value=b'REASON')],
                        values=[
                          Call(
                            func=Attribute(
                              value=Constant(value=False),
                              attr='to_bytes',
                              ctx=Load()),
                            args=[
                              Call(
                                func=Attribute(
                                  value=Constant(value=False),
                                  attr='bit_length',
                                  ctx=Load()),
                                args=[],
                                keywords=[]),
                              Constant(value='big')],
                            keywords=[]),
                          Constant(value=b'USER IS DELETED')])],
                    keywords=[]))],
              orelse=[
                Assign(
                  targets=[
                    Name(id='msg', ctx=Store())],
                  value=Call(
                    func=Name(id='create_message', ctx=Load()),
                    args=[
                      Constant(value=b'SRVR'),
                      Constant(value=b'USERINFO'),
                      Dict(
                        keys=[
                          Constant(value=b'SUCCESS'),
                          Constant(value=b'IDENTIFIER'),
                          Constant(value=b'FNAME'),
                          Constant(value=b'LNAME'),
                          Constant(value=b'COMPANY_NAME'),
                          Constant(value=b'COMPANY_ID'),
                          Constant(value=b'EMAIL'),
                          Constant(value=b'STATE')],
                        values=[
                          Call(
                            func=Attribute(
                              value=Constant(value=True),
                              attr='to_bytes',
                              ctx=Load()),
                            args=[
                              Call(
                                func=Attribute(
                                  value=Constant(value=True),
                                  attr='bit_length',
                                  ctx=Load()),
                                args=[],
                                keywords=[]),
                              Constant(value='big')],
                            keywords=[]),
                          Call(
                            func=Attribute(
                              value=Call(
                                func=Name(id='str', ctx=Load()),
                                args=[
                                  Subscript(
                                    value=Name(id='user', ctx=Load()),
                                    slice=Constant(value='id_number'),
                                    ctx=Load())],
                                keywords=[]),
                              attr='encode',
                              ctx=Load()),
                            args=[],
                            keywords=[]),
                          Call(
                            func=Attribute(
                              value=Subscript(
                                value=Name(id='user', ctx=Load()),
                                slice=Constant(value='fname'),
                                ctx=Load()),
                              attr='encode',
                              ctx=Load()),
                            args=[],
                            keywords=[]),
                          Call(
                            func=Attribute(
                              value=Subscript(
                                value=Name(id='user', ctx=Load()),
                                slice=Constant(value='lname'),
                                ctx=Load()),
                              attr='encode',
                              ctx=Load()),
                            args=[],
                            keywords=[]),
                          Call(
                            func=Attribute(
                              value=Name(id='company_name', ctx=Load()),
                              attr='encode',
                              ctx=Load()),
                            args=[],
                            keywords=[]),
                          Call(
                            func=Attribute(
                              value=Call(
                                func=Name(id='str', ctx=Load()),
                                args=[
                                  Name(id='company_id', ctx=Load())],
                                keywords=[]),
                              attr='encode',
                              ctx=Load()),
                            args=[],
                            keywords=[]),
                          Call(
                            func=Attribute(
                              value=Subscript(
                                value=Name(id='user', ctx=Load()),
                                slice=Constant(value='email'),
                                ctx=Load()),
                              attr='encode',
                              ctx=Load()),
                            args=[],
                            keywords=[]),
                          Call(
                            func=Attribute(
                              value=Subscript(
                                value=Name(id='user', ctx=Load()),
                                slice=Constant(value='user_state'),
                                ctx=Load()),
                              attr='to_bytes',
                              ctx=Load()),
                            args=[
                              Call(
                                func=Attribute(
                                  value=Subscript(
                                    value=Name(id='user', ctx=Load()),
                                    slice=Constant(value='user_state'),
                                    ctx=Load()),
                                  attr='bit_length',
                                  ctx=Load()),
                                args=[],
                                keywords=[]),
                              Constant(value='big')],
                            keywords=[])])],
                    keywords=[]))]),
            Assign(
              targets=[
                Name(id='encrypted', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='self', ctx=Load()),
                  attr='_prepare_message',
                  ctx=Load()),
                args=[
                  Name(id='msg', ctx=Load()),
                  Constant(value=b'USERINFO'),
                  Name(id='client_public_key', ctx=Load())],
                keywords=[])),
            Expr(
              value=Call(
                func=Attribute(
                  value=Name(id='client', ctx=Load()),
                  attr='send',
                  ctx=Load()),
                args=[
                  Name(id='encrypted', ctx=Load())],
                keywords=[]))],
          decorator_list=[
            Call(
              func=Name(id='protocol', ctx=Load()),
              args=[
                Constant(value=b'USERINFO')],
              keywords=[])]),
        FunctionDef(
          name='_mail_manager',
          args=arguments(
            posonlyargs=[],
            args=[
              arg(arg='self'),
              arg(arg='client_id'),
              arg(arg='client'),
              arg(arg='data')],
            kwonlyargs=[],
            kw_defaults=[],
            defaults=[]),
          body=[
            Expr(
              value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                  Constant(value='Mail MANAGER')],
                keywords=[])),
            Try(
              body=[
                Assign(
                  targets=[
                    Name(id='client_public_key', ctx=Store())],
                  value=Subscript(
                    value=Subscript(
                      value=Attribute(
                        value=Name(id='self', ctx=Load()),
                        attr='_clients',
                        ctx=Load()),
                      slice=Name(id='client_id', ctx=Load()),
                      ctx=Load()),
                    slice=Name(id='RSA_PUBLIC_KEY', ctx=Load()),
                    ctx=Load())),
                Assign(
                  targets=[
                    Name(id='client_token', ctx=Store())],
                  value=Subscript(
                    value=Subscript(
                      value=Attribute(
                        value=Name(id='self', ctx=Load()),
                        attr='_clients',
                        ctx=Load()),
                      slice=Name(id='client_id', ctx=Load()),
                      ctx=Load()),
                    slice=Name(id='AUTHENTICATION_TOKEN', ctx=Load()),
                    ctx=Load()))],
              handlers=[
                ExceptHandler(
                  type=Name(id='KeyError', ctx=Load()),
                  name='error',
                  body=[
                    Expr(
                      value=Call(
                        func=Attribute(
                          value=Name(id='logger', ctx=Load()),
                          attr='error',
                          ctx=Load()),
                        args=[
                          Call(
                            func=Name(id='str', ctx=Load()),
                            args=[
                              Name(id='error', ctx=Load())],
                            keywords=[])],
                        keywords=[])),
                    Return()])],
              orelse=[],
              finalbody=[]),
            Assign(
              targets=[
                Name(id='parameters', ctx=Store())],
              value=Call(
                func=Name(id='extract_parameters', ctx=Load()),
                args=[
                  Name(id='data', ctx=Load())],
                keywords=[])),
            Assign(
              targets=[
                Name(id='token', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Subscript(
                    value=Name(id='parameters', ctx=Load()),
                    slice=Constant(value='AUTH_TOKEN'),
                    ctx=Load()),
                  attr='decode',
                  ctx=Load()),
                args=[],
                keywords=[])),
            If(
              test=Compare(
                left=Name(id='token', ctx=Load()),
                ops=[
                  NotEq()],
                comparators=[
                  Name(id='client_token', ctx=Load())]),
              body=[
                Assign(
                  targets=[
                    Name(id='msg', ctx=Store())],
                  value=Call(
                    func=Name(id='create_message', ctx=Load()),
                    args=[
                      Constant(value=b'SRVR'),
                      Constant(value=b'MAILMANAGER'),
                      Dict(
                        keys=[
                          Constant(value=b'SUCCESS'),
                          Constant(value=b'REASON')],
                        values=[
                          Call(
                            func=Attribute(
                              value=Constant(value=False),
                              attr='to_bytes',
                              ctx=Load()),
                            args=[
                              Call(
                                func=Attribute(
                                  value=Constant(value=False),
                                  attr='bit_length',
                                  ctx=Load()),
                                args=[],
                                keywords=[]),
                              Constant(value='big')],
                            keywords=[]),
                          Constant(value=b'CLIENT TOKEN IS FAULTY')])],
                    keywords=[])),
                Assign(
                  targets=[
                    Name(id='encrypted', ctx=Store())],
                  value=Call(
                    func=Attribute(
                      value=Name(id='self', ctx=Load()),
                      attr='_prepare_message',
                      ctx=Load()),
                    args=[
                      Name(id='msg', ctx=Load()),
                      Constant(value=b'UPDATE'),
                      Name(id='client_public_key', ctx=Load())],
                    keywords=[])),
                Expr(
                  value=Call(
                    func=Attribute(
                      value=Name(id='client', ctx=Load()),
                      attr='send',
                      ctx=Load()),
                    args=[
                      Name(id='encrypted', ctx=Load())],
                    keywords=[])),
                Expr(
                  value=Call(
                    func=Name(id='print', ctx=Load()),
                    args=[
                      Constant(value='Faulty Token')],
                    keywords=[])),
                Return()],
              orelse=[]),
            Assign(
              targets=[
                Name(id='message', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Subscript(
                    value=Name(id='parameters', ctx=Load()),
                    slice=Constant(value='MESSAGE'),
                    ctx=Load()),
                  attr='decode',
                  ctx=Load()),
                args=[],
                keywords=[])),
            Assign(
              targets=[
                Name(id='client_id_number', ctx=Store())],
              value=Subscript(
                value=Name(id='parameters', ctx=Load()),
                slice=Constant(value='IDENTIFIER'),
                ctx=Load())),
            Assign(
              targets=[
                Name(id='db', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='Database', ctx=Load()),
                  attr='PlateGateDB',
                  ctx=Load()),
                args=[],
                keywords=[])),
            Assign(
              targets=[
                Tuple(
                  elts=[
                    Name(id='_', ctx=Store()),
                    Name(id='client_company_id', ctx=Store())],
                  ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='db', ctx=Load()),
                  attr='get_company_by_user_id',
                  ctx=Load()),
                args=[
                  Call(
                    func=Attribute(
                      value=Name(id='client_id_number', ctx=Load()),
                      attr='decode',
                      ctx=Load()),
                    args=[],
                    keywords=[])],
                keywords=[])),
            Expr(
              value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                  Name(id='client_company_id', ctx=Load())],
                keywords=[])),
            Assign(
              targets=[
                Name(id='client_manager', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='db', ctx=Load()),
                  attr='get_manager_by_company_id',
                  ctx=Load()),
                args=[
                  Name(id='client_company_id', ctx=Load())],
                keywords=[])),
            Assign(
              targets=[
                Name(id='manager_email', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='db', ctx=Load()),
                  attr='get_email',
                  ctx=Load()),
                args=[
                  Name(id='client_manager', ctx=Load())],
                keywords=[])),
            Expr(
              value=Call(
                func=Attribute(
                  value=Attribute(
                    value=Name(id='self', ctx=Load()),
                    attr='_mailer',
                    ctx=Load()),
                  attr='mailto',
                  ctx=Load()),
                args=[
                  List(
                    elts=[
                      Name(id='manager_email', ctx=Load())],
                    ctx=Load()),
                  JoinedStr(
                    values=[
                      Constant(value='Message from '),
                      FormattedValue(
                        value=Call(
                          func=Attribute(
                            value=Name(id='client_id_number', ctx=Load()),
                            attr='decode',
                            ctx=Load()),
                          args=[],
                          keywords=[]),
                        conversion=-1),
                      Constant(value=' (PlateGate)')]),
                  Name(id='message', ctx=Load())],
                keywords=[])),
            Assign(
              targets=[
                Name(id='msg', ctx=Store())],
              value=Call(
                func=Name(id='create_message', ctx=Load()),
                args=[
                  Constant(value=b'SRVR'),
                  Constant(value=b'MAILMANAGER'),
                  Dict(
                    keys=[
                      Constant(value=b'SUCCESS')],
                    values=[
                      Call(
                        func=Attribute(
                          value=Constant(value=True),
                          attr='to_bytes',
                          ctx=Load()),
                        args=[
                          Call(
                            func=Attribute(
                              value=Constant(value=True),
                              attr='bit_length',
                              ctx=Load()),
                            args=[],
                            keywords=[]),
                          Constant(value='big')],
                        keywords=[])])],
                keywords=[])),
            Assign(
              targets=[
                Name(id='encrypted', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='self', ctx=Load()),
                  attr='_prepare_message',
                  ctx=Load()),
                args=[
                  Name(id='msg', ctx=Load()),
                  Constant(value=b'MAILMANAGER'),
                  Name(id='client_public_key', ctx=Load())],
                keywords=[])),
            Expr(
              value=Call(
                func=Attribute(
                  value=Name(id='client', ctx=Load()),
                  attr='send',
                  ctx=Load()),
                args=[
                  Name(id='encrypted', ctx=Load())],
                keywords=[]))],
          decorator_list=[
            Call(
              func=Name(id='protocol', ctx=Load()),
              args=[
                Constant(value=b'MAILMANAGER')],
              keywords=[])]),
        FunctionDef(
          name='_delete_user',
          args=arguments(
            posonlyargs=[],
            args=[
              arg(arg='self'),
              arg(arg='client_id'),
              arg(arg='client'),
              arg(arg='data')],
            kwonlyargs=[],
            kw_defaults=[],
            defaults=[]),
          body=[
            Expr(
              value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                  Constant(value='DELETE UsER STARTED')],
                keywords=[])),
            Try(
              body=[
                Assign(
                  targets=[
                    Name(id='client_public_key', ctx=Store())],
                  value=Subscript(
                    value=Subscript(
                      value=Attribute(
                        value=Name(id='self', ctx=Load()),
                        attr='_clients',
                        ctx=Load()),
                      slice=Name(id='client_id', ctx=Load()),
                      ctx=Load()),
                    slice=Name(id='RSA_PUBLIC_KEY', ctx=Load()),
                    ctx=Load())),
                Assign(
                  targets=[
                    Name(id='client_token', ctx=Store())],
                  value=Subscript(
                    value=Subscript(
                      value=Attribute(
                        value=Name(id='self', ctx=Load()),
                        attr='_clients',
                        ctx=Load()),
                      slice=Name(id='client_id', ctx=Load()),
                      ctx=Load()),
                    slice=Name(id='AUTHENTICATION_TOKEN', ctx=Load()),
                    ctx=Load()))],
              handlers=[
                ExceptHandler(
                  type=Name(id='KeyError', ctx=Load()),
                  name='error',
                  body=[
                    Expr(
                      value=Call(
                        func=Attribute(
                          value=Name(id='logger', ctx=Load()),
                          attr='error',
                          ctx=Load()),
                        args=[
                          Call(
                            func=Name(id='str', ctx=Load()),
                            args=[
                              Name(id='error', ctx=Load())],
                            keywords=[])],
                        keywords=[])),
                    Return()])],
              orelse=[],
              finalbody=[]),
            Assign(
              targets=[
                Name(id='parameters', ctx=Store())],
              value=Call(
                func=Name(id='extract_parameters', ctx=Load()),
                args=[
                  Name(id='data', ctx=Load())],
                keywords=[])),
            Assign(
              targets=[
                Name(id='token', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Subscript(
                    value=Name(id='parameters', ctx=Load()),
                    slice=Constant(value='AUTH_TOKEN'),
                    ctx=Load()),
                  attr='decode',
                  ctx=Load()),
                args=[],
                keywords=[])),
            If(
              test=Compare(
                left=Name(id='token', ctx=Load()),
                ops=[
                  NotEq()],
                comparators=[
                  Name(id='client_token', ctx=Load())]),
              body=[
                Assign(
                  targets=[
                    Name(id='msg', ctx=Store())],
                  value=Call(
                    func=Name(id='create_message', ctx=Load()),
                    args=[
                      Constant(value=b'SRVR'),
                      Constant(value=b'DELETE'),
                      Dict(
                        keys=[
                          Constant(value=b'SUCCESS'),
                          Constant(value=b'REASON')],
                        values=[
                          Call(
                            func=Attribute(
                              value=Constant(value=False),
                              attr='to_bytes',
                              ctx=Load()),
                            args=[
                              Call(
                                func=Attribute(
                                  value=Constant(value=False),
                                  attr='bit_length',
                                  ctx=Load()),
                                args=[],
                                keywords=[]),
                              Constant(value='big')],
                            keywords=[]),
                          Constant(value=b'CLIENT TOKEN IS FAULTY')])],
                    keywords=[])),
                Assign(
                  targets=[
                    Name(id='encrypted', ctx=Store())],
                  value=Call(
                    func=Attribute(
                      value=Name(id='self', ctx=Load()),
                      attr='_prepare_message',
                      ctx=Load()),
                    args=[
                      Name(id='msg', ctx=Load()),
                      Constant(value=b'UPDATE'),
                      Name(id='client_public_key', ctx=Load())],
                    keywords=[])),
                Expr(
                  value=Call(
                    func=Attribute(
                      value=Name(id='client', ctx=Load()),
                      attr='send',
                      ctx=Load()),
                    args=[
                      Name(id='encrypted', ctx=Load())],
                    keywords=[])),
                Expr(
                  value=Call(
                    func=Name(id='print', ctx=Load()),
                    args=[
                      Constant(value='Faulty Token')],
                    keywords=[])),
                Return()],
              orelse=[]),
            Assign(
              targets=[
                Name(id='db', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='Database', ctx=Load()),
                  attr='PlateGateDB',
                  ctx=Load()),
                args=[],
                keywords=[])),
            Assign(
              targets=[
                Name(id='identifier', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Subscript(
                    value=Name(id='parameters', ctx=Load()),
                    slice=Constant(value='IDENTIFIER'),
                    ctx=Load()),
                  attr='decode',
                  ctx=Load()),
                args=[],
                keywords=[])),
            Assign(
              targets=[
                Name(id='user', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='db', ctx=Load()),
                  attr='get_user_by_id',
                  ctx=Load()),
                args=[
                  Name(id='identifier', ctx=Load())],
                keywords=[])),
            Assign(
              targets=[
                Name(id='manager_id', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='db', ctx=Load()),
                  attr='get_manager_by_company_id',
                  ctx=Load()),
                args=[
                  Subscript(
                    value=Name(id='user', ctx=Load()),
                    slice=Constant(value='company_id'),
                    ctx=Load())],
                keywords=[])),
            Expr(
              value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                  Name(id='manager_id', ctx=Load())],
                keywords=[])),
            If(
              test=Compare(
                left=Call(
                  func=Name(id='str', ctx=Load()),
                  args=[
                    Name(id='manager_id', ctx=Load())],
                  keywords=[]),
                ops=[
                  NotEq()],
                comparators=[
                  Call(
                    func=Attribute(
                      value=Subscript(
                        value=Name(id='parameters', ctx=Load()),
                        slice=Constant(value='MANAGER_ID'),
                        ctx=Load()),
                      attr='decode',
                      ctx=Load()),
                    args=[],
                    keywords=[])]),
              body=[
                Assign(
                  targets=[
                    Name(id='msg', ctx=Store())],
                  value=Call(
                    func=Name(id='create_message', ctx=Load()),
                    args=[
                      Constant(value=b'SRVR'),
                      Constant(value=b'UPDATE'),
                      Dict(
                        keys=[
                          Constant(value=b'SUCCESS'),
                          Constant(value=b'REASON')],
                        values=[
                          Call(
                            func=Attribute(
                              value=Constant(value=False),
                              attr='to_bytes',
                              ctx=Load()),
                            args=[
                              Call(
                                func=Attribute(
                                  value=Constant(value=False),
                                  attr='bit_length',
                                  ctx=Load()),
                                args=[],
                                keywords=[]),
                              Constant(value='big')],
                            keywords=[]),
                          Constant(value=b'CLIENT IS NOT IN YOUR COMPANY')])],
                    keywords=[])),
                Assign(
                  targets=[
                    Name(id='encrypted', ctx=Store())],
                  value=Call(
                    func=Attribute(
                      value=Name(id='self', ctx=Load()),
                      attr='_prepare_message',
                      ctx=Load()),
                    args=[
                      Name(id='msg', ctx=Load()),
                      Constant(value=b'DELETE'),
                      Name(id='client_public_key', ctx=Load())],
                    keywords=[])),
                Expr(
                  value=Call(
                    func=Attribute(
                      value=Name(id='client', ctx=Load()),
                      attr='send',
                      ctx=Load()),
                    args=[
                      Name(id='encrypted', ctx=Load())],
                    keywords=[])),
                Expr(
                  value=Call(
                    func=Name(id='print', ctx=Load()),
                    args=[
                      Constant(value='Client not in company')],
                    keywords=[])),
                Return()],
              orelse=[]),
            Assign(
              targets=[
                Name(id='success', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='db', ctx=Load()),
                  attr='remove_user',
                  ctx=Load()),
                args=[
                  Name(id='identifier', ctx=Load())],
                keywords=[])),
            If(
              test=Name(id='success', ctx=Load()),
              body=[
                Assign(
                  targets=[
                    Name(id='msg', ctx=Store())],
                  value=Call(
                    func=Name(id='create_message', ctx=Load()),
                    args=[
                      Constant(value=b'SRVR'),
                      Constant(value=b'DELETE'),
                      Dict(
                        keys=[
                          Constant(value=b'SUCCESS')],
                        values=[
                          Call(
                            func=Attribute(
                              value=Name(id='success', ctx=Load()),
                              attr='to_bytes',
                              ctx=Load()),
                            args=[
                              Call(
                                func=Attribute(
                                  value=Name(id='success', ctx=Load()),
                                  attr='bit_length',
                                  ctx=Load()),
                                args=[],
                                keywords=[]),
                              Constant(value='big')],
                            keywords=[])])],
                    keywords=[]))],
              orelse=[
                Assign(
                  targets=[
                    Name(id='msg', ctx=Store())],
                  value=Call(
                    func=Name(id='create_message', ctx=Load()),
                    args=[
                      Constant(value=b'SRVR'),
                      Constant(value=b'DELETE'),
                      Dict(
                        keys=[
                          Constant(value=b'SUCCESS'),
                          Constant(value=b'REASON')],
                        values=[
                          Call(
                            func=Attribute(
                              value=Name(id='success', ctx=Load()),
                              attr='to_bytes',
                              ctx=Load()),
                            args=[
                              Call(
                                func=Attribute(
                                  value=Name(id='success', ctx=Load()),
                                  attr='bit_length',
                                  ctx=Load()),
                                args=[],
                                keywords=[]),
                              Constant(value='big')],
                            keywords=[]),
                          Constant(value=b"Couldn't delete client")])],
                    keywords=[]))]),
            Assign(
              targets=[
                Name(id='encrypted', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='self', ctx=Load()),
                  attr='_prepare_message',
                  ctx=Load()),
                args=[
                  Name(id='msg', ctx=Load()),
                  Constant(value=b'DELETE'),
                  Name(id='client_public_key', ctx=Load())],
                keywords=[])),
            Expr(
              value=Call(
                func=Attribute(
                  value=Name(id='client', ctx=Load()),
                  attr='send',
                  ctx=Load()),
                args=[
                  Name(id='encrypted', ctx=Load())],
                keywords=[]))],
          decorator_list=[
            Call(
              func=Name(id='protocol', ctx=Load()),
              args=[
                Constant(value=b'DELETE')],
              keywords=[])]),
        FunctionDef(
          name='_update_user',
          args=arguments(
            posonlyargs=[],
            args=[
              arg(arg='self'),
              arg(arg='client_id'),
              arg(arg='client'),
              arg(arg='data')],
            kwonlyargs=[],
            kw_defaults=[],
            defaults=[]),
          body=[
            Expr(
              value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                  Constant(value='UPDATE UsER STARTED')],
                keywords=[])),
            Try(
              body=[
                Assign(
                  targets=[
                    Name(id='client_public_key', ctx=Store())],
                  value=Subscript(
                    value=Subscript(
                      value=Attribute(
                        value=Name(id='self', ctx=Load()),
                        attr='_clients',
                        ctx=Load()),
                      slice=Name(id='client_id', ctx=Load()),
                      ctx=Load()),
                    slice=Name(id='RSA_PUBLIC_KEY', ctx=Load()),
                    ctx=Load())),
                Assign(
                  targets=[
                    Name(id='client_token', ctx=Store())],
                  value=Subscript(
                    value=Subscript(
                      value=Attribute(
                        value=Name(id='self', ctx=Load()),
                        attr='_clients',
                        ctx=Load()),
                      slice=Name(id='client_id', ctx=Load()),
                      ctx=Load()),
                    slice=Name(id='AUTHENTICATION_TOKEN', ctx=Load()),
                    ctx=Load()))],
              handlers=[
                ExceptHandler(
                  type=Name(id='KeyError', ctx=Load()),
                  name='error',
                  body=[
                    Expr(
                      value=Call(
                        func=Attribute(
                          value=Name(id='logger', ctx=Load()),
                          attr='error',
                          ctx=Load()),
                        args=[
                          Call(
                            func=Name(id='str', ctx=Load()),
                            args=[
                              Name(id='error', ctx=Load())],
                            keywords=[])],
                        keywords=[])),
                    Return()])],
              orelse=[],
              finalbody=[]),
            Assign(
              targets=[
                Name(id='parameters', ctx=Store())],
              value=Call(
                func=Name(id='extract_parameters', ctx=Load()),
                args=[
                  Name(id='data', ctx=Load())],
                keywords=[])),
            Expr(
              value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                  Name(id='parameters', ctx=Load())],
                keywords=[])),
            Assign(
              targets=[
                Name(id='token', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Subscript(
                    value=Name(id='parameters', ctx=Load()),
                    slice=Constant(value='AUTH_TOKEN'),
                    ctx=Load()),
                  attr='decode',
                  ctx=Load()),
                args=[],
                keywords=[])),
            If(
              test=Compare(
                left=Name(id='token', ctx=Load()),
                ops=[
                  NotEq()],
                comparators=[
                  Name(id='client_token', ctx=Load())]),
              body=[
                Assign(
                  targets=[
                    Name(id='msg', ctx=Store())],
                  value=Call(
                    func=Name(id='create_message', ctx=Load()),
                    args=[
                      Constant(value=b'SRVR'),
                      Constant(value=b'UPDATE'),
                      Dict(
                        keys=[
                          Constant(value=b'SUCCESS'),
                          Constant(value=b'REASON')],
                        values=[
                          Call(
                            func=Attribute(
                              value=Constant(value=False),
                              attr='to_bytes',
                              ctx=Load()),
                            args=[
                              Call(
                                func=Attribute(
                                  value=Constant(value=False),
                                  attr='bit_length',
                                  ctx=Load()),
                                args=[],
                                keywords=[]),
                              Constant(value='big')],
                            keywords=[]),
                          Constant(value=b'CLIENT TOKEN IS FAULTY')])],
                    keywords=[])),
                Assign(
                  targets=[
                    Name(id='encrypted', ctx=Store())],
                  value=Call(
                    func=Attribute(
                      value=Name(id='self', ctx=Load()),
                      attr='_prepare_message',
                      ctx=Load()),
                    args=[
                      Name(id='msg', ctx=Load()),
                      Constant(value=b'UPDATE'),
                      Name(id='client_public_key', ctx=Load())],
                    keywords=[])),
                Expr(
                  value=Call(
                    func=Attribute(
                      value=Name(id='client', ctx=Load()),
                      attr='send',
                      ctx=Load()),
                    args=[
                      Name(id='encrypted', ctx=Load())],
                    keywords=[])),
                Expr(
                  value=Call(
                    func=Name(id='print', ctx=Load()),
                    args=[
                      Constant(value='Faulty Token')],
                    keywords=[])),
                Return()],
              orelse=[]),
            Assign(
              targets=[
                Name(id='db', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='Database', ctx=Load()),
                  attr='PlateGateDB',
                  ctx=Load()),
                args=[],
                keywords=[])),
            Assign(
              targets=[
                Name(id='identifier', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Subscript(
                    value=Name(id='parameters', ctx=Load()),
                    slice=Constant(value='IDENTIFIER'),
                    ctx=Load()),
                  attr='decode',
                  ctx=Load()),
                args=[],
                keywords=[])),
            Assign(
              targets=[
                Name(id='user', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='db', ctx=Load()),
                  attr='get_user_by_id',
                  ctx=Load()),
                args=[
                  Name(id='identifier', ctx=Load())],
                keywords=[])),
            Assign(
              targets=[
                Name(id='manager_id', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='db', ctx=Load()),
                  attr='get_manager_by_company_id',
                  ctx=Load()),
                args=[
                  Subscript(
                    value=Name(id='user', ctx=Load()),
                    slice=Constant(value='company_id'),
                    ctx=Load())],
                keywords=[])),
            Expr(
              value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                  Name(id='manager_id', ctx=Load())],
                keywords=[])),
            If(
              test=Compare(
                left=Call(
                  func=Name(id='str', ctx=Load()),
                  args=[
                    Name(id='manager_id', ctx=Load())],
                  keywords=[]),
                ops=[
                  NotEq()],
                comparators=[
                  Call(
                    func=Attribute(
                      value=Subscript(
                        value=Name(id='parameters', ctx=Load()),
                        slice=Constant(value='MANAGER_ID'),
                        ctx=Load()),
                      attr='decode',
                      ctx=Load()),
                    args=[],
                    keywords=[])]),
              body=[
                Assign(
                  targets=[
                    Name(id='msg', ctx=Store())],
                  value=Call(
                    func=Name(id='create_message', ctx=Load()),
                    args=[
                      Constant(value=b'SRVR'),
                      Constant(value=b'UPDATE'),
                      Dict(
                        keys=[
                          Constant(value=b'SUCCESS'),
                          Constant(value=b'REASON')],
                        values=[
                          Call(
                            func=Attribute(
                              value=Constant(value=False),
                              attr='to_bytes',
                              ctx=Load()),
                            args=[
                              Call(
                                func=Attribute(
                                  value=Constant(value=False),
                                  attr='bit_length',
                                  ctx=Load()),
                                args=[],
                                keywords=[]),
                              Constant(value='big')],
                            keywords=[]),
                          Constant(value=b'CLIENT IS NOT IN YOUR COMPANY')])],
                    keywords=[])),
                Assign(
                  targets=[
                    Name(id='encrypted', ctx=Store())],
                  value=Call(
                    func=Attribute(
                      value=Name(id='self', ctx=Load()),
                      attr='_prepare_message',
                      ctx=Load()),
                    args=[
                      Name(id='msg', ctx=Load()),
                      Constant(value=b'UPDATE'),
                      Name(id='client_public_key', ctx=Load())],
                    keywords=[])),
                Expr(
                  value=Call(
                    func=Attribute(
                      value=Name(id='client', ctx=Load()),
                      attr='send',
                      ctx=Load()),
                    args=[
                      Name(id='encrypted', ctx=Load())],
                    keywords=[])),
                Expr(
                  value=Call(
                    func=Name(id='print', ctx=Load()),
                    args=[
                      Constant(value='Client not in company')],
                    keywords=[])),
                Return()],
              orelse=[]),
            Assign(
              targets=[
                Name(id='success', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='db', ctx=Load()),
                  attr='update',
                  ctx=Load()),
                args=[
                  Constant(value='users')],
                keywords=[
                  keyword(
                    arg='id_number',
                    value=Name(id='identifier', ctx=Load())),
                  keyword(
                    arg='fname',
                    value=Call(
                      func=Attribute(
                        value=Name(id='parameters', ctx=Load()),
                        attr='get',
                        ctx=Load()),
                      args=[
                        Constant(value='FNAME'),
                        Subscript(
                          value=Name(id='user', ctx=Load()),
                          slice=Constant(value='fname'),
                          ctx=Load())],
                      keywords=[])),
                  keyword(
                    arg='lname',
                    value=Call(
                      func=Attribute(
                        value=Name(id='parameters', ctx=Load()),
                        attr='get',
                        ctx=Load()),
                      args=[
                        Constant(value='LNAME'),
                        Subscript(
                          value=Name(id='user', ctx=Load()),
                          slice=Constant(value='lname'),
                          ctx=Load())],
                      keywords=[])),
                  keyword(
                    arg='email',
                    value=Call(
                      func=Attribute(
                        value=Name(id='parameters', ctx=Load()),
                        attr='get',
                        ctx=Load()),
                      args=[
                        Constant(value='EMAIL'),
                        Subscript(
                          value=Name(id='user', ctx=Load()),
                          slice=Constant(value='email'),
                          ctx=Load())],
                      keywords=[]))])),
            If(
              test=Name(id='success', ctx=Load()),
              body=[
                Assign(
                  targets=[
                    Name(id='msg', ctx=Store())],
                  value=Call(
                    func=Name(id='create_message', ctx=Load()),
                    args=[
                      Constant(value=b'SRVR'),
                      Constant(value=b'UPDATE'),
                      Dict(
                        keys=[
                          Constant(value=b'SUCCESS')],
                        values=[
                          Call(
                            func=Attribute(
                              value=Name(id='success', ctx=Load()),
                              attr='to_bytes',
                              ctx=Load()),
                            args=[
                              Call(
                                func=Attribute(
                                  value=Name(id='success', ctx=Load()),
                                  attr='bit_length',
                                  ctx=Load()),
                                args=[],
                                keywords=[]),
                              Constant(value='big')],
                            keywords=[])])],
                    keywords=[]))],
              orelse=[
                Assign(
                  targets=[
                    Name(id='msg', ctx=Store())],
                  value=Call(
                    func=Name(id='create_message', ctx=Load()),
                    args=[
                      Constant(value=b'SRVR'),
                      Constant(value=b'UPDATE'),
                      Dict(
                        keys=[
                          Constant(value=b'SUCCESS'),
                          Constant(value=b'REASON')],
                        values=[
                          Call(
                            func=Attribute(
                              value=Name(id='success', ctx=Load()),
                              attr='to_bytes',
                              ctx=Load()),
                            args=[
                              Call(
                                func=Attribute(
                                  value=Name(id='success', ctx=Load()),
                                  attr='bit_length',
                                  ctx=Load()),
                                args=[],
                                keywords=[]),
                              Constant(value='big')],
                            keywords=[]),
                          Constant(value=b"Couldn't commit changes")])],
                    keywords=[]))]),
            Assign(
              targets=[
                Name(id='encrypted', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='self', ctx=Load()),
                  attr='_prepare_message',
                  ctx=Load()),
                args=[
                  Name(id='msg', ctx=Load()),
                  Constant(value=b'UPDATE'),
                  Name(id='client_public_key', ctx=Load())],
                keywords=[])),
            Expr(
              value=Call(
                func=Attribute(
                  value=Name(id='client', ctx=Load()),
                  attr='send',
                  ctx=Load()),
                args=[
                  Name(id='encrypted', ctx=Load())],
                keywords=[]))],
          decorator_list=[
            Call(
              func=Name(id='protocol', ctx=Load()),
              args=[
                Constant(value=b'UPDATE')],
              keywords=[])]),
        FunctionDef(
          name='_recognize',
          args=arguments(
            posonlyargs=[],
            args=[
              arg(arg='self'),
              arg(arg='client_id'),
              arg(arg='client'),
              arg(arg='data')],
            kwonlyargs=[],
            kw_defaults=[],
            defaults=[]),
          body=[
            Try(
              body=[
                Assign(
                  targets=[
                    Name(id='client_public_key', ctx=Store())],
                  value=Subscript(
                    value=Subscript(
                      value=Attribute(
                        value=Name(id='self', ctx=Load()),
                        attr='_clients',
                        ctx=Load()),
                      slice=Name(id='client_id', ctx=Load()),
                      ctx=Load()),
                    slice=Name(id='RSA_PUBLIC_KEY', ctx=Load()),
                    ctx=Load()))],
              handlers=[
                ExceptHandler(
                  type=Name(id='KeyError', ctx=Load()),
                  name='error',
                  body=[
                    Expr(
                      value=Call(
                        func=Attribute(
                          value=Name(id='logger', ctx=Load()),
                          attr='error',
                          ctx=Load()),
                        args=[
                          Call(
                            func=Name(id='str', ctx=Load()),
                            args=[
                              Name(id='error', ctx=Load())],
                            keywords=[])],
                        keywords=[])),
                    Return()])],
              orelse=[],
              finalbody=[]),
            Assign(
              targets=[
                Name(id='filename', ctx=Store())],
              value=JoinedStr(
                values=[
                  Constant(value='ServerImages/'),
                  FormattedValue(
                    value=Name(id='client_id', ctx=Load()),
                    conversion=-1),
                  Constant(value='.jpg')])),
            Expr(
              value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                  Name(id='filename', ctx=Load())],
                keywords=[])),
            Assign(
              targets=[
                Name(id='parameters', ctx=Store())],
              value=Call(
                func=Name(id='extract_parameters', ctx=Load()),
                args=[
                  Name(id='data', ctx=Load())],
                keywords=[])),
            Assign(
              targets=[
                Name(id='image_bytes', ctx=Store())],
              value=Subscript(
                value=Name(id='parameters', ctx=Load()),
                slice=Constant(value='IMAGE'),
                ctx=Load())),
            With(
              items=[
                withitem(
                  context_expr=Call(
                    func=Name(id='open', ctx=Load()),
                    args=[
                      Name(id='filename', ctx=Load()),
                      Constant(value='wb')],
                    keywords=[]),
                  optional_vars=Name(id='f', ctx=Store()))],
              body=[
                Expr(
                  value=Call(
                    func=Attribute(
                      value=Name(id='f', ctx=Load()),
                      attr='write',
                      ctx=Load()),
                    args=[
                      Name(id='image_bytes', ctx=Load())],
                    keywords=[]))]),
            Assign(
              targets=[
                Name(id='license_plate', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='Recognize', ctx=Load()),
                  attr='recognize_from_image',
                  ctx=Load()),
                args=[
                  Name(id='filename', ctx=Load())],
                keywords=[])),
            Expr(
              value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                  Name(id='license_plate', ctx=Load())],
                keywords=[])),
            If(
              test=UnaryOp(
                op=Not(),
                operand=Name(id='license_plate', ctx=Load())),
              body=[
                Assign(
                  targets=[
                    Name(id='message', ctx=Store())],
                  value=Call(
                    func=Name(id='create_message', ctx=Load()),
                    args=[
                      Constant(value=b'SRVR'),
                      Constant(value=b'RECOGNIZE'),
                      Dict(
                        keys=[
                          Constant(value=b'SUCCESS'),
                          Constant(value=b'REASON')],
                        values=[
                          Call(
                            func=Attribute(
                              value=Constant(value=False),
                              attr='to_bytes',
                              ctx=Load()),
                            args=[
                              Call(
                                func=Attribute(
                                  value=Constant(value=False),
                                  attr='bit_length',
                                  ctx=Load()),
                                args=[],
                                keywords=[]),
                              Constant(value='big')],
                            keywords=[]),
                          Constant(value=b'bad image, could not recognize')])],
                    keywords=[])),
                Assign(
                  targets=[
                    Name(id='encrypted', ctx=Store())],
                  value=Call(
                    func=Attribute(
                      value=Name(id='self', ctx=Load()),
                      attr='_prepare_message',
                      ctx=Load()),
                    args=[
                      Name(id='message', ctx=Load()),
                      Constant(value=b'RECOGNIZE'),
                      Name(id='client_public_key', ctx=Load())],
                    keywords=[])),
                Expr(
                  value=Call(
                    func=Attribute(
                      value=Name(id='client', ctx=Load()),
                      attr='send',
                      ctx=Load()),
                    args=[
                      Name(id='encrypted', ctx=Load())],
                    keywords=[])),
                Expr(
                  value=Call(
                    func=Attribute(
                      value=Name(id='logger', ctx=Load()),
                      attr='info',
                      ctx=Load()),
                    args=[
                      Constant(value='couldnt recognize image')],
                    keywords=[])),
                Return()],
              orelse=[]),
            Assign(
              targets=[
                Name(id='db', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='Database', ctx=Load()),
                  attr='PlateGateDB',
                  ctx=Load()),
                args=[],
                keywords=[])),
            Assign(
              targets=[
                Name(id='vehicle_db', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='db', ctx=Load()),
                  attr='get_vehicle_by_plate_number',
                  ctx=Load()),
                args=[
                  Name(id='license_plate', ctx=Load())],
                keywords=[])),
            If(
              test=UnaryOp(
                op=Not(),
                operand=Name(id='vehicle_db', ctx=Load())),
              body=[
                Assign(
                  targets=[
                    Name(id='message', ctx=Store())],
                  value=Call(
                    func=Name(id='create_message', ctx=Load()),
                    args=[
                      Constant(value=b'SRVR'),
                      Constant(value=b'RECOGNIZE'),
                      Dict(
                        keys=[
                          Constant(value=b'SUCCESS'),
                          Constant(value=b'REASON')],
                        values=[
                          Call(
                            func=Attribute(
                              value=Constant(value=False),
                              attr='to_bytes',
                              ctx=Load()),
                            args=[
                              Call(
                                func=Attribute(
                                  value=Constant(value=False),
                                  attr='bit_length',
                                  ctx=Load()),
                                args=[],
                                keywords=[]),
                              Constant(value='big')],
                            keywords=[]),
                          Constant(value=b'vehicle not in database')])],
                    keywords=[])),
                Assign(
                  targets=[
                    Name(id='encrypted', ctx=Store())],
                  value=Call(
                    func=Attribute(
                      value=Name(id='self', ctx=Load()),
                      attr='_prepare_message',
                      ctx=Load()),
                    args=[
                      Name(id='message', ctx=Load()),
                      Constant(value=b'RECOGNIZE'),
                      Name(id='client_public_key', ctx=Load())],
                    keywords=[])),
                Expr(
                  value=Call(
                    func=Attribute(
                      value=Name(id='client', ctx=Load()),
                      attr='send',
                      ctx=Load()),
                    args=[
                      Name(id='encrypted', ctx=Load())],
                    keywords=[])),
                Expr(
                  value=Call(
                    func=Attribute(
                      value=Name(id='logger', ctx=Load()),
                      attr='info',
                      ctx=Load()),
                    args=[
                      Constant(value='couldnt recognize image')],
                    keywords=[])),
                Return()],
              orelse=[]),
            Assign(
              targets=[
                Name(id='owner_id', ctx=Store())],
              value=Subscript(
                value=Name(id='vehicle_db', ctx=Load()),
                slice=Constant(value='owner_id'),
                ctx=Load())),
            Assign(
              targets=[
                Tuple(
                  elts=[
                    Name(id='name', ctx=Store()),
                    Name(id='company_id', ctx=Store())],
                  ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='db', ctx=Load()),
                  attr='get_company_by_user_id',
                  ctx=Load()),
                args=[
                  Name(id='owner_id', ctx=Load())],
                keywords=[])),
            If(
              test=Compare(
                left=Call(
                  func=Attribute(
                    value=Name(id='int', ctx=Load()),
                    attr='from_bytes',
                    ctx=Load()),
                  args=[
                    Subscript(
                      value=Name(id='parameters', ctx=Load()),
                      slice=Constant(value='COMPANY_ID'),
                      ctx=Load()),
                    Constant(value='big')],
                  keywords=[]),
                ops=[
                  NotEq()],
                comparators=[
                  Name(id='company_id', ctx=Load())]),
              body=[
                Assign(
                  targets=[
                    Name(id='message', ctx=Store())],
                  value=Call(
                    func=Name(id='create_message', ctx=Load()),
                    args=[
                      Constant(value=b'SRVR'),
                      Constant(value=b'RECOGNIZE'),
                      Dict(
                        keys=[
                          Constant(value=b'SUCCESS'),
                          Constant(value=b'REASON')],
                        values=[
                          Call(
                            func=Attribute(
                              value=Constant(value=False),
                              attr='to_bytes',
                              ctx=Load()),
                            args=[
                              Call(
                                func=Attribute(
                                  value=Constant(value=False),
                                  attr='bit_length',
                                  ctx=Load()),
                                args=[],
                                keywords=[]),
                              Constant(value='big')],
                            keywords=[]),
                          Constant(value=b'car not in company')])],
                    keywords=[])),
                Assign(
                  targets=[
                    Name(id='encrypted', ctx=Store())],
                  value=Call(
                    func=Attribute(
                      value=Name(id='self', ctx=Load()),
                      attr='_prepare_message',
                      ctx=Load()),
                    args=[
                      Name(id='message', ctx=Load()),
                      Constant(value=b'RECOGNIZE'),
                      Name(id='client_public_key', ctx=Load())],
                    keywords=[])),
                Expr(
                  value=Call(
                    func=Attribute(
                      value=Name(id='client', ctx=Load()),
                      attr='send',
                      ctx=Load()),
                    args=[
                      Name(id='encrypted', ctx=Load())],
                    keywords=[])),
                Expr(
                  value=Call(
                    func=Attribute(
                      value=Name(id='logger', ctx=Load()),
                      attr='info',
                      ctx=Load()),
                    args=[
                      Constant(value='couldnt recognize image')],
                    keywords=[])),
                Return()],
              orelse=[]),
            Assign(
              targets=[
                Name(id='vehicle_gov', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Attribute(
                    value=Name(id='fetch', ctx=Load()),
                    attr='GovApiFetcher',
                    ctx=Load()),
                  attr='get_vehicle_by_plate_number',
                  ctx=Load()),
                args=[
                  Name(id='license_plate', ctx=Load())],
                keywords=[])),
            Assign(
              targets=[
                Name(id='validation_list', ctx=Store())],
              value=List(
                elts=[
                  Compare(
                    left=Attribute(
                      value=Name(id='vehicle_gov', ctx=Load()),
                      attr='plate_number',
                      ctx=Load()),
                    ops=[
                      Eq()],
                    comparators=[
                      Subscript(
                        value=Name(id='vehicle_db', ctx=Load()),
                        slice=Constant(value='plate_number'),
                        ctx=Load())]),
                  Compare(
                    left=Attribute(
                      value=Name(id='vehicle_gov', ctx=Load()),
                      attr='shnat_yitsur',
                      ctx=Load()),
                    ops=[
                      Eq()],
                    comparators=[
                      Subscript(
                        value=Name(id='vehicle_db', ctx=Load()),
                        slice=Constant(value='shnat_yitsur'),
                        ctx=Load())]),
                  Compare(
                    left=Attribute(
                      value=Attribute(
                        value=Name(id='vehicle_gov', ctx=Load()),
                        attr='sug_delek',
                        ctx=Load()),
                      attr='value',
                      ctx=Load()),
                    ops=[
                      Eq()],
                    comparators=[
                      Subscript(
                        value=Name(id='vehicle_db', ctx=Load()),
                        slice=Constant(value='sug_delek'),
                        ctx=Load())]),
                  Compare(
                    left=Attribute(
                      value=Attribute(
                        value=Name(id='vehicle_gov', ctx=Load()),
                        attr='sug_rechev',
                        ctx=Load()),
                      attr='value',
                      ctx=Load()),
                    ops=[
                      Eq()],
                    comparators=[
                      Subscript(
                        value=Name(id='vehicle_db', ctx=Load()),
                        slice=Constant(value='sug_rechev'),
                        ctx=Load())]),
                  Compare(
                    left=Subscript(
                      value=Name(id='vehicle_db', ctx=Load()),
                      slice=Constant(value='vehicle_state'),
                      ctx=Load()),
                    ops=[
                      GtE()],
                    comparators=[
                      Constant(value=0)]),
                  Call(
                    func=Attribute(
                      value=Name(id='vehicle_gov', ctx=Load()),
                      attr='active',
                      ctx=Load()),
                    args=[],
                    keywords=[]),
                  UnaryOp(
                    op=Not(),
                    operand=Attribute(
                      value=Name(id='vehicle_gov', ctx=Load()),
                      attr='totaled',
                      ctx=Load()))],
                ctx=Load())),
            Assign(
              targets=[
                Name(id='is_valid', ctx=Store())],
              value=Call(
                func=Name(id='all', ctx=Load()),
                args=[
                  Name(id='validation_list', ctx=Load())],
                keywords=[])),
            If(
              test=UnaryOp(
                op=Not(),
                operand=Name(id='is_valid', ctx=Load())),
              body=[
                Expr(
                  value=Call(
                    func=Name(id='print', ctx=Load()),
                    args=[
                      Constant(value='vehicle not valid')],
                    keywords=[])),
                Assign(
                  targets=[
                    Name(id='message', ctx=Store())],
                  value=Call(
                    func=Name(id='create_message', ctx=Load()),
                    args=[
                      Constant(value=b'SRVR'),
                      Constant(value=b'RECOGNIZE'),
                      Dict(
                        keys=[
                          Constant(value=b'SUCCESS'),
                          Constant(value=b'REASON')],
                        values=[
                          Call(
                            func=Attribute(
                              value=Constant(value=False),
                              attr='to_bytes',
                              ctx=Load()),
                            args=[
                              Call(
                                func=Attribute(
                                  value=Constant(value=False),
                                  attr='bit_length',
                                  ctx=Load()),
                                args=[],
                                keywords=[]),
                              Constant(value='big')],
                            keywords=[]),
                          Call(
                            func=Attribute(
                              value=JoinedStr(
                                values=[
                                  FormattedValue(
                                    value=Name(id='validation_list', ctx=Load()),
                                    conversion=-1)]),
                              attr='encode',
                              ctx=Load()),
                            args=[],
                            keywords=[])])],
                    keywords=[])),
                Assign(
                  targets=[
                    Name(id='encrypted', ctx=Store())],
                  value=Call(
                    func=Attribute(
                      value=Name(id='self', ctx=Load()),
                      attr='_prepare_message',
                      ctx=Load()),
                    args=[
                      Name(id='message', ctx=Load()),
                      Constant(value=b'RECOGNIZE'),
                      Name(id='client_public_key', ctx=Load())],
                    keywords=[])),
                Expr(
                  value=Call(
                    func=Attribute(
                      value=Name(id='client', ctx=Load()),
                      attr='send',
                      ctx=Load()),
                    args=[
                      Name(id='encrypted', ctx=Load())],
                    keywords=[])),
                Expr(
                  value=Call(
                    func=Attribute(
                      value=Name(id='logger', ctx=Load()),
                      attr='info',
                      ctx=Load()),
                    args=[
                      Constant(value='vehicle not valid')],
                    keywords=[])),
                Return()],
              orelse=[]),
            Assign(
              targets=[
                Name(id='recognized', ctx=Store())],
              value=JoinedStr(
                values=[
                  Constant(value='./ServerImages/'),
                  FormattedValue(
                    value=Name(id='client_id', ctx=Load()),
                    conversion=-1),
                  Constant(value='_RECOGNIZED.png')])),
            With(
              items=[
                withitem(
                  context_expr=Call(
                    func=Name(id='open', ctx=Load()),
                    args=[
                      Name(id='recognized', ctx=Load()),
                      Constant(value='rb')],
                    keywords=[]),
                  optional_vars=Name(id='f', ctx=Store()))],
              body=[
                Assign(
                  targets=[
                    Name(id='image_bytes', ctx=Store())],
                  value=Call(
                    func=Attribute(
                      value=Name(id='f', ctx=Load()),
                      attr='read',
                      ctx=Load()),
                    args=[],
                    keywords=[]))]),
            Expr(
              value=Call(
                func=Attribute(
                  value=Name(id='os', ctx=Load()),
                  attr='remove',
                  ctx=Load()),
                args=[
                  Name(id='recognized', ctx=Load())],
                keywords=[])),
            Assign(
              targets=[
                Name(id='message', ctx=Store())],
              value=Call(
                func=Name(id='create_message', ctx=Load()),
                args=[
                  Constant(value=b'SRVR'),
                  Constant(value=b'RECOGNIZE'),
                  Dict(
                    keys=[
                      Constant(value=b'SUCCESS'),
                      Constant(value=b'RECOGNIZED_IMAGE')],
                    values=[
                      Call(
                        func=Attribute(
                          value=Constant(value=True),
                          attr='to_bytes',
                          ctx=Load()),
                        args=[
                          Call(
                            func=Attribute(
                              value=Constant(value=True),
                              attr='bit_length',
                              ctx=Load()),
                            args=[],
                            keywords=[]),
                          Constant(value='big')],
                        keywords=[]),
                      Name(id='image_bytes', ctx=Load())])],
                keywords=[])),
            Assign(
              targets=[
                Name(id='encrypted', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='self', ctx=Load()),
                  attr='_prepare_message',
                  ctx=Load()),
                args=[
                  Name(id='message', ctx=Load()),
                  Constant(value=b'RECOGNIZE'),
                  Name(id='client_public_key', ctx=Load())],
                keywords=[])),
            Expr(
              value=Call(
                func=Attribute(
                  value=Name(id='client', ctx=Load()),
                  attr='send',
                  ctx=Load()),
                args=[
                  Name(id='encrypted', ctx=Load())],
                keywords=[])),
            If(
              test=Call(
                func=Attribute(
                  value=Attribute(
                    value=Name(id='sys', ctx=Load()),
                    attr='platform',
                    ctx=Load()),
                  attr='startswith',
                  ctx=Load()),
                args=[
                  Constant(value='linux')],
                keywords=[]),
              body=[
                Assign(
                  targets=[
                    Name(id='time_now', ctx=Store())],
                  value=Call(
                    func=Attribute(
                      value=Name(id='time', ctx=Load()),
                      attr='clock_gettime',
                      ctx=Load()),
                    args=[
                      Attribute(
                        value=Name(id='time', ctx=Load()),
                        attr='CLOCK_REALTIME',
                        ctx=Load())],
                    keywords=[]))],
              orelse=[
                Assign(
                  targets=[
                    Name(id='time_now', ctx=Store())],
                  value=Call(
                    func=Attribute(
                      value=Name(id='time', ctx=Load()),
                      attr='time',
                      ctx=Load()),
                    args=[],
                    keywords=[]))]),
            Assign(
              targets=[
                Name(id='time_readalbe', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Attribute(
                    value=Name(id='datetime', ctx=Load()),
                    attr='datetime',
                    ctx=Load()),
                  attr='now',
                  ctx=Load()),
                args=[],
                keywords=[])),
            Expr(
              value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                  Name(id='time_readalbe', ctx=Load())],
                keywords=[])),
            Assign(
              targets=[
                Name(id='inserted', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='db', ctx=Load()),
                  attr='insert_into',
                  ctx=Load()),
                args=[
                  Constant(value='entries')],
                keywords=[
                  keyword(
                    arg='time_now',
                    value=Name(id='time_now', ctx=Load())),
                  keyword(
                    arg='time_readable',
                    value=Call(
                      func=Name(id='str', ctx=Load()),
                      args=[
                        Name(id='time_readalbe', ctx=Load())],
                      keywords=[])),
                  keyword(
                    arg='person_id',
                    value=Subscript(
                      value=Name(id='vehicle_db', ctx=Load()),
                      slice=Constant(value='owner_id'),
                      ctx=Load())),
                  keyword(
                    arg='car_id',
                    value=Subscript(
                      value=Name(id='vehicle_db', ctx=Load()),
                      slice=Constant(value='plate_number'),
                      ctx=Load())),
                  keyword(
                    arg='company_id',
                    value=Name(id='company_id', ctx=Load()))])),
            If(
              test=Name(id='inserted', ctx=Load()),
              body=[
                Expr(
                  value=Call(
                    func=Name(id='print', ctx=Load()),
                    args=[
                      Constant(value='entry inserted')],
                    keywords=[]))],
              orelse=[
                Expr(
                  value=Call(
                    func=Name(id='print', ctx=Load()),
                    args=[
                      Constant(value='entry not inserted')],
                    keywords=[]))])],
          decorator_list=[
            Call(
              func=Name(id='protocol', ctx=Load()),
              args=[
                Constant(value=b'RECOGNIZE')],
              keywords=[])]),
        FunctionDef(
          name='_add_plate',
          args=arguments(
            posonlyargs=[],
            args=[
              arg(arg='self'),
              arg(arg='client_id'),
              arg(arg='client'),
              arg(arg='data')],
            kwonlyargs=[],
            kw_defaults=[],
            defaults=[]),
          body=[
            Try(
              body=[
                Assign(
                  targets=[
                    Name(id='client_public_key', ctx=Store())],
                  value=Subscript(
                    value=Subscript(
                      value=Attribute(
                        value=Name(id='self', ctx=Load()),
                        attr='_clients',
                        ctx=Load()),
                      slice=Name(id='client_id', ctx=Load()),
                      ctx=Load()),
                    slice=Name(id='RSA_PUBLIC_KEY', ctx=Load()),
                    ctx=Load()))],
              handlers=[
                ExceptHandler(
                  type=Name(id='KeyError', ctx=Load()),
                  body=[
                    Return()])],
              orelse=[],
              finalbody=[]),
            Assign(
              targets=[
                Name(id='parameters', ctx=Store())],
              value=Call(
                func=Name(id='extract_parameters', ctx=Load()),
                args=[
                  Name(id='data', ctx=Load())],
                keywords=[])),
            Assign(
              targets=[
                Name(id='manager_id', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Subscript(
                    value=Name(id='parameters', ctx=Load()),
                    slice=Constant(value='MANAGER_ID'),
                    ctx=Load()),
                  attr='decode',
                  ctx=Load()),
                args=[],
                keywords=[])),
            Assign(
              targets=[
                Name(id='user_id', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Subscript(
                    value=Name(id='parameters', ctx=Load()),
                    slice=Constant(value='USER_ID'),
                    ctx=Load()),
                  attr='decode',
                  ctx=Load()),
                args=[],
                keywords=[])),
            Assign(
              targets=[
                Name(id='plate_number', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Subscript(
                    value=Name(id='parameters', ctx=Load()),
                    slice=Constant(value='PLATE_NUMBER'),
                    ctx=Load()),
                  attr='decode',
                  ctx=Load()),
                args=[],
                keywords=[])),
            Assign(
              targets=[
                Name(id='db', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='Database', ctx=Load()),
                  attr='PlateGateDB',
                  ctx=Load()),
                args=[],
                keywords=[])),
            Assign(
              targets=[
                Name(id='user_company', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='db', ctx=Load()),
                  attr='get_company_by_user_id',
                  ctx=Load()),
                args=[
                  Name(id='user_id', ctx=Load())],
                keywords=[])),
            Assign(
              targets=[
                Name(id='manager_company', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='db', ctx=Load()),
                  attr='get_company_by_user_id',
                  ctx=Load()),
                args=[
                  Name(id='manager_id', ctx=Load())],
                keywords=[])),
            If(
              test=Compare(
                left=Name(id='manager_company', ctx=Load()),
                ops=[
                  NotEq()],
                comparators=[
                  Name(id='user_company', ctx=Load())]),
              body=[
                Assign(
                  targets=[
                    Name(id='message', ctx=Store())],
                  value=Call(
                    func=Name(id='create_message', ctx=Load()),
                    args=[
                      Constant(value=b'SRVR'),
                      Constant(value=b'ADDPLATE'),
                      Dict(
                        keys=[
                          Constant(value=b'SUCCESS'),
                          Constant(value=b'REASON')],
                        values=[
                          Call(
                            func=Attribute(
                              value=Constant(value=False),
                              attr='to_bytes',
                              ctx=Load()),
                            args=[
                              Call(
                                func=Attribute(
                                  value=Constant(value=False),
                                  attr='bit_length',
                                  ctx=Load()),
                                args=[],
                                keywords=[]),
                              Constant(value='big')],
                            keywords=[]),
                          Constant(value=b'CLIENT NOT IN COMPANY')])],
                    keywords=[])),
                Assign(
                  targets=[
                    Name(id='encrypted', ctx=Store())],
                  value=Call(
                    func=Attribute(
                      value=Name(id='self', ctx=Load()),
                      attr='_prepare_message',
                      ctx=Load()),
                    args=[
                      Name(id='message', ctx=Load()),
                      Constant(value=b'ADDPLATE'),
                      Name(id='client_public_key', ctx=Load())],
                    keywords=[])),
                Expr(
                  value=Call(
                    func=Attribute(
                      value=Name(id='client', ctx=Load()),
                      attr='send',
                      ctx=Load()),
                    args=[
                      Name(id='encrypted', ctx=Load())],
                    keywords=[])),
                Return()],
              orelse=[]),
            Assign(
              targets=[
                Name(id='manager_state', ctx=Store())],
              value=Call(
                func=Name(id='int', ctx=Load()),
                args=[
                  Subscript(
                    value=Call(
                      func=Attribute(
                        value=Name(id='db', ctx=Load()),
                        attr='get_user_by_id',
                        ctx=Load()),
                      args=[
                        Name(id='manager_id', ctx=Load())],
                      keywords=[]),
                    slice=Constant(value='user_state'),
                    ctx=Load())],
                keywords=[])),
            If(
              test=Compare(
                left=Name(id='manager_state', ctx=Load()),
                ops=[
                  Lt()],
                comparators=[
                  Constant(value=2)]),
              body=[
                Assign(
                  targets=[
                    Name(id='message', ctx=Store())],
                  value=Call(
                    func=Name(id='create_message', ctx=Load()),
                    args=[
                      Constant(value=b'SRVR'),
                      Constant(value=b'ADDPLATE'),
                      Dict(
                        keys=[
                          Constant(value=b'SUCCESS'),
                          Constant(value=b'REASON')],
                        values=[
                          Call(
                            func=Attribute(
                              value=Constant(value=False),
                              attr='to_bytes',
                              ctx=Load()),
                            args=[
                              Call(
                                func=Attribute(
                                  value=Constant(value=False),
                                  attr='bit_length',
                                  ctx=Load()),
                                args=[],
                                keywords=[]),
                              Constant(value='big')],
                            keywords=[]),
                          Constant(value=b'YOURE NOT A MANAGER')])],
                    keywords=[])),
                Assign(
                  targets=[
                    Name(id='encrypted', ctx=Store())],
                  value=Call(
                    func=Attribute(
                      value=Name(id='self', ctx=Load()),
                      attr='_prepare_message',
                      ctx=Load()),
                    args=[
                      Name(id='message', ctx=Load()),
                      Constant(value=b'ADDPLATE'),
                      Name(id='client_public_key', ctx=Load())],
                    keywords=[])),
                Expr(
                  value=Call(
                    func=Attribute(
                      value=Name(id='client', ctx=Load()),
                      attr='send',
                      ctx=Load()),
                    args=[
                      Name(id='encrypted', ctx=Load())],
                    keywords=[])),
                Return()],
              orelse=[]),
            Assign(
              targets=[
                Name(id='vehicle', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Attribute(
                    value=Name(id='fetch', ctx=Load()),
                    attr='GovApiFetcher',
                    ctx=Load()),
                  attr='get_vehicle_by_plate_number',
                  ctx=Load()),
                args=[
                  Name(id='plate_number', ctx=Load())],
                keywords=[])),
            If(
              test=UnaryOp(
                op=Not(),
                operand=Name(id='vehicle', ctx=Load())),
              body=[
                Assign(
                  targets=[
                    Name(id='message', ctx=Store())],
                  value=Call(
                    func=Name(id='create_message', ctx=Load()),
                    args=[
                      Constant(value=b'SRVR'),
                      Constant(value=b'ADDPLATE'),
                      Dict(
                        keys=[
                          Constant(value=b'SUCCESS'),
                          Constant(value=b'REASON')],
                        values=[
                          Call(
                            func=Attribute(
                              value=Constant(value=False),
                              attr='to_bytes',
                              ctx=Load()),
                            args=[
                              Call(
                                func=Attribute(
                                  value=Constant(value=False),
                                  attr='bit_length',
                                  ctx=Load()),
                                args=[],
                                keywords=[]),
                              Constant(value='big')],
                            keywords=[]),
                          Constant(value=b'VEHICLE DOTN EXIST')])],
                    keywords=[])),
                Assign(
                  targets=[
                    Name(id='encrypted', ctx=Store())],
                  value=Call(
                    func=Attribute(
                      value=Name(id='self', ctx=Load()),
                      attr='_prepare_message',
                      ctx=Load()),
                    args=[
                      Name(id='message', ctx=Load()),
                      Constant(value=b'ADDPLATE'),
                      Name(id='client_public_key', ctx=Load())],
                    keywords=[])),
                Expr(
                  value=Call(
                    func=Attribute(
                      value=Name(id='client', ctx=Load()),
                      attr='send',
                      ctx=Load()),
                    args=[
                      Name(id='encrypted', ctx=Load())],
                    keywords=[])),
                Return()],
              orelse=[]),
            If(
              test=BoolOp(
                op=Or(),
                values=[
                  Attribute(
                    value=Name(id='vehicle', ctx=Load()),
                    attr='totaled',
                    ctx=Load()),
                  UnaryOp(
                    op=Not(),
                    operand=Call(
                      func=Attribute(
                        value=Name(id='vehicle', ctx=Load()),
                        attr='active',
                        ctx=Load()),
                      args=[],
                      keywords=[]))]),
              body=[
                Assign(
                  targets=[
                    Name(id='message', ctx=Store())],
                  value=Call(
                    func=Name(id='create_message', ctx=Load()),
                    args=[
                      Constant(value=b'SRVR'),
                      Constant(value=b'ADDPLATE'),
                      Dict(
                        keys=[
                          Constant(value=b'SUCCESS'),
                          Constant(value=b'REASON')],
                        values=[
                          Call(
                            func=Attribute(
                              value=Constant(value=False),
                              attr='to_bytes',
                              ctx=Load()),
                            args=[
                              Call(
                                func=Attribute(
                                  value=Constant(value=False),
                                  attr='bit_length',
                                  ctx=Load()),
                                args=[],
                                keywords=[]),
                              Constant(value='big')],
                            keywords=[]),
                          Constant(value=b'VEHICLE IS NOT ACTIVE OR TOTAL LOSS')])],
                    keywords=[])),
                Assign(
                  targets=[
                    Name(id='encrypted', ctx=Store())],
                  value=Call(
                    func=Attribute(
                      value=Name(id='self', ctx=Load()),
                      attr='_prepare_message',
                      ctx=Load()),
                    args=[
                      Name(id='message', ctx=Load()),
                      Constant(value=b'ADDPLATE'),
                      Name(id='client_public_key', ctx=Load())],
                    keywords=[])),
                Expr(
                  value=Call(
                    func=Attribute(
                      value=Name(id='client', ctx=Load()),
                      attr='send',
                      ctx=Load()),
                    args=[
                      Name(id='encrypted', ctx=Load())],
                    keywords=[])),
                Return()],
              orelse=[]),
            Assign(
              targets=[
                Name(id='user_state', ctx=Store())],
              value=Subscript(
                value=Call(
                  func=Attribute(
                    value=Name(id='db', ctx=Load()),
                    attr='get_user_by_id',
                    ctx=Load()),
                  args=[
                    Name(id='user_id', ctx=Load())],
                  keywords=[]),
                slice=Constant(value='user_state'),
                ctx=Load())),
            Assign(
              targets=[
                Name(id='updated', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='db', ctx=Load()),
                  attr='update',
                  ctx=Load()),
                args=[
                  Constant(value='vehicles')],
                keywords=[
                  keyword(
                    arg='plate_number',
                    value=Name(id='plate_number', ctx=Load())),
                  keyword(
                    arg='vehicle_state',
                    value=Constant(value=1))])),
            If(
              test=UnaryOp(
                op=Not(),
                operand=Name(id='updated', ctx=Load())),
              body=[
                Assign(
                  targets=[
                    Name(id='message', ctx=Store())],
                  value=Call(
                    func=Name(id='create_message', ctx=Load()),
                    args=[
                      Constant(value=b'SRVR'),
                      Constant(value=b'ADDPLATE'),
                      Dict(
                        keys=[
                          Constant(value=b'SUCCESS'),
                          Constant(value=b'REASON')],
                        values=[
                          Call(
                            func=Attribute(
                              value=Constant(value=False),
                              attr='to_bytes',
                              ctx=Load()),
                            args=[
                              Call(
                                func=Attribute(
                                  value=Constant(value=False),
                                  attr='bit_length',
                                  ctx=Load()),
                                args=[],
                                keywords=[]),
                              Constant(value='big')],
                            keywords=[]),
                          Constant(value=b'Couldnt enter vehicle to db')])],
                    keywords=[])),
                Assign(
                  targets=[
                    Name(id='encrypted', ctx=Store())],
                  value=Call(
                    func=Attribute(
                      value=Name(id='self', ctx=Load()),
                      attr='_prepare_message',
                      ctx=Load()),
                    args=[
                      Name(id='message', ctx=Load()),
                      Constant(value=b'ADDPLATE'),
                      Name(id='client_public_key', ctx=Load())],
                    keywords=[])),
                Expr(
                  value=Call(
                    func=Attribute(
                      value=Name(id='client', ctx=Load()),
                      attr='send',
                      ctx=Load()),
                    args=[
                      Name(id='encrypted', ctx=Load())],
                    keywords=[])),
                Return()],
              orelse=[]),
            Assign(
              targets=[
                Name(id='inserted', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='vehicle', ctx=Load()),
                  attr='add_to_database',
                  ctx=Load()),
                args=[
                  Name(id='user_id', ctx=Load())],
                keywords=[])),
            If(
              test=BoolOp(
                op=And(),
                values=[
                  UnaryOp(
                    op=Not(),
                    operand=Name(id='inserted', ctx=Load())),
                  UnaryOp(
                    op=Not(),
                    operand=Name(id='updated', ctx=Load()))]),
              body=[
                Assign(
                  targets=[
                    Name(id='message', ctx=Store())],
                  value=Call(
                    func=Name(id='create_message', ctx=Load()),
                    args=[
                      Constant(value=b'SRVR'),
                      Constant(value=b'ADDPLATE'),
                      Dict(
                        keys=[
                          Constant(value=b'SUCCESS'),
                          Constant(value=b'REASON')],
                        values=[
                          Call(
                            func=Attribute(
                              value=Constant(value=False),
                              attr='to_bytes',
                              ctx=Load()),
                            args=[
                              Call(
                                func=Attribute(
                                  value=Constant(value=False),
                                  attr='bit_length',
                                  ctx=Load()),
                                args=[],
                                keywords=[]),
                              Constant(value='big')],
                            keywords=[]),
                          Constant(value=b'Couldnt enter vehicle to db')])],
                    keywords=[])),
                Assign(
                  targets=[
                    Name(id='encrypted', ctx=Store())],
                  value=Call(
                    func=Attribute(
                      value=Name(id='self', ctx=Load()),
                      attr='_prepare_message',
                      ctx=Load()),
                    args=[
                      Name(id='message', ctx=Load()),
                      Constant(value=b'ADDPLATE'),
                      Name(id='client_public_key', ctx=Load())],
                    keywords=[])),
                Expr(
                  value=Call(
                    func=Attribute(
                      value=Name(id='client', ctx=Load()),
                      attr='send',
                      ctx=Load()),
                    args=[
                      Name(id='encrypted', ctx=Load())],
                    keywords=[])),
                Return()],
              orelse=[]),
            If(
              test=Compare(
                left=Name(id='user_state', ctx=Load()),
                ops=[
                  Eq()],
                comparators=[
                  Constant(value=0)]),
              body=[
                Expr(
                  value=Call(
                    func=Attribute(
                      value=Name(id='db', ctx=Load()),
                      attr='update',
                      ctx=Load()),
                    args=[
                      Constant(value='vehicles')],
                    keywords=[
                      keyword(
                        arg='plate_number',
                        value=Name(id='plate_number', ctx=Load())),
                      keyword(
                        arg='vehicle_state',
                        value=Constant(value=0))]))],
              orelse=[]),
            Expr(
              value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                  Constant(value='WE MADE IT')],
                keywords=[])),
            Assign(
              targets=[
                Name(id='message', ctx=Store())],
              value=Call(
                func=Name(id='create_message', ctx=Load()),
                args=[
                  Constant(value=b'SRVR'),
                  Constant(value=b'ADDPLATE'),
                  Dict(
                    keys=[
                      Constant(value=b'SUCCESS')],
                    values=[
                      Call(
                        func=Attribute(
                          value=Constant(value=True),
                          attr='to_bytes',
                          ctx=Load()),
                        args=[
                          Call(
                            func=Attribute(
                              value=Constant(value=True),
                              attr='bit_length',
                              ctx=Load()),
                            args=[],
                            keywords=[]),
                          Constant(value='big')],
                        keywords=[])])],
                keywords=[])),
            Assign(
              targets=[
                Name(id='encrypted', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='self', ctx=Load()),
                  attr='_prepare_message',
                  ctx=Load()),
                args=[
                  Name(id='message', ctx=Load()),
                  Constant(value=b'ADDPLATE'),
                  Name(id='client_public_key', ctx=Load())],
                keywords=[])),
            Expr(
              value=Call(
                func=Attribute(
                  value=Name(id='client', ctx=Load()),
                  attr='send',
                  ctx=Load()),
                args=[
                  Name(id='encrypted', ctx=Load())],
                keywords=[])),
            Return()],
          decorator_list=[
            Call(
              func=Name(id='protocol', ctx=Load()),
              args=[
                Constant(value=b'ADDPLATE')],
              keywords=[])]),
        FunctionDef(
          name='_remove_plate',
          args=arguments(
            posonlyargs=[],
            args=[
              arg(arg='self'),
              arg(arg='client_id'),
              arg(arg='client'),
              arg(arg='data')],
            kwonlyargs=[],
            kw_defaults=[],
            defaults=[]),
          body=[
            Try(
              body=[
                Assign(
                  targets=[
                    Name(id='client_public_key', ctx=Store())],
                  value=Subscript(
                    value=Subscript(
                      value=Attribute(
                        value=Name(id='self', ctx=Load()),
                        attr='_clients',
                        ctx=Load()),
                      slice=Name(id='client_id', ctx=Load()),
                      ctx=Load()),
                    slice=Name(id='RSA_PUBLIC_KEY', ctx=Load()),
                    ctx=Load()))],
              handlers=[
                ExceptHandler(
                  type=Name(id='KeyError', ctx=Load()),
                  body=[
                    Return()])],
              orelse=[],
              finalbody=[]),
            Assign(
              targets=[
                Name(id='parameters', ctx=Store())],
              value=Call(
                func=Name(id='extract_parameters', ctx=Load()),
                args=[
                  Name(id='data', ctx=Load())],
                keywords=[])),
            Assign(
              targets=[
                Name(id='manager_id', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Subscript(
                    value=Name(id='parameters', ctx=Load()),
                    slice=Constant(value='MANAGER_ID'),
                    ctx=Load()),
                  attr='decode',
                  ctx=Load()),
                args=[],
                keywords=[])),
            Assign(
              targets=[
                Name(id='user_id', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Subscript(
                    value=Name(id='parameters', ctx=Load()),
                    slice=Constant(value='USER_ID'),
                    ctx=Load()),
                  attr='decode',
                  ctx=Load()),
                args=[],
                keywords=[])),
            Assign(
              targets=[
                Name(id='plate_number', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Subscript(
                    value=Name(id='parameters', ctx=Load()),
                    slice=Constant(value='PLATE_NUMBER'),
                    ctx=Load()),
                  attr='decode',
                  ctx=Load()),
                args=[],
                keywords=[])),
            Assign(
              targets=[
                Name(id='db', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='Database', ctx=Load()),
                  attr='PlateGateDB',
                  ctx=Load()),
                args=[],
                keywords=[])),
            Assign(
              targets=[
                Name(id='user_company', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='db', ctx=Load()),
                  attr='get_company_by_user_id',
                  ctx=Load()),
                args=[
                  Name(id='user_id', ctx=Load())],
                keywords=[])),
            Assign(
              targets=[
                Name(id='manager_company', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='db', ctx=Load()),
                  attr='get_company_by_user_id',
                  ctx=Load()),
                args=[
                  Name(id='manager_id', ctx=Load())],
                keywords=[])),
            If(
              test=Compare(
                left=Name(id='manager_company', ctx=Load()),
                ops=[
                  NotEq()],
                comparators=[
                  Name(id='user_company', ctx=Load())]),
              body=[
                Assign(
                  targets=[
                    Name(id='message', ctx=Store())],
                  value=Call(
                    func=Name(id='create_message', ctx=Load()),
                    args=[
                      Constant(value=b'SRVR'),
                      Constant(value=b'REMOVEPLATE'),
                      Dict(
                        keys=[
                          Constant(value=b'SUCCESS'),
                          Constant(value=b'REASON')],
                        values=[
                          Call(
                            func=Attribute(
                              value=Constant(value=False),
                              attr='to_bytes',
                              ctx=Load()),
                            args=[
                              Call(
                                func=Attribute(
                                  value=Constant(value=False),
                                  attr='bit_length',
                                  ctx=Load()),
                                args=[],
                                keywords=[]),
                              Constant(value='big')],
                            keywords=[]),
                          Constant(value=b'CLIENT NOT IN COMPANY')])],
                    keywords=[])),
                Assign(
                  targets=[
                    Name(id='encrypted', ctx=Store())],
                  value=Call(
                    func=Attribute(
                      value=Name(id='self', ctx=Load()),
                      attr='_prepare_message',
                      ctx=Load()),
                    args=[
                      Name(id='message', ctx=Load()),
                      Constant(value=b'REMOVEPLATE'),
                      Name(id='client_public_key', ctx=Load())],
                    keywords=[])),
                Expr(
                  value=Call(
                    func=Attribute(
                      value=Name(id='client', ctx=Load()),
                      attr='send',
                      ctx=Load()),
                    args=[
                      Name(id='encrypted', ctx=Load())],
                    keywords=[])),
                Return()],
              orelse=[]),
            Assign(
              targets=[
                Name(id='manager_state', ctx=Store())],
              value=Call(
                func=Name(id='int', ctx=Load()),
                args=[
                  Subscript(
                    value=Call(
                      func=Attribute(
                        value=Name(id='db', ctx=Load()),
                        attr='get_user_by_id',
                        ctx=Load()),
                      args=[
                        Name(id='manager_id', ctx=Load())],
                      keywords=[]),
                    slice=Constant(value='user_state'),
                    ctx=Load())],
                keywords=[])),
            If(
              test=Compare(
                left=Name(id='manager_state', ctx=Load()),
                ops=[
                  Lt()],
                comparators=[
                  Constant(value=2)]),
              body=[
                Assign(
                  targets=[
                    Name(id='message', ctx=Store())],
                  value=Call(
                    func=Name(id='create_message', ctx=Load()),
                    args=[
                      Constant(value=b'SRVR'),
                      Constant(value=b'REMOVEPLATE'),
                      Dict(
                        keys=[
                          Constant(value=b'SUCCESS'),
                          Constant(value=b'REASON')],
                        values=[
                          Call(
                            func=Attribute(
                              value=Constant(value=False),
                              attr='to_bytes',
                              ctx=Load()),
                            args=[
                              Call(
                                func=Attribute(
                                  value=Constant(value=False),
                                  attr='bit_length',
                                  ctx=Load()),
                                args=[],
                                keywords=[]),
                              Constant(value='big')],
                            keywords=[]),
                          Constant(value=b'YOURE NOT A MANAGER')])],
                    keywords=[])),
                Assign(
                  targets=[
                    Name(id='encrypted', ctx=Store())],
                  value=Call(
                    func=Attribute(
                      value=Name(id='self', ctx=Load()),
                      attr='_prepare_message',
                      ctx=Load()),
                    args=[
                      Name(id='message', ctx=Load()),
                      Constant(value=b'REMOVEPLATE'),
                      Name(id='client_public_key', ctx=Load())],
                    keywords=[])),
                Expr(
                  value=Call(
                    func=Attribute(
                      value=Name(id='client', ctx=Load()),
                      attr='send',
                      ctx=Load()),
                    args=[
                      Name(id='encrypted', ctx=Load())],
                    keywords=[])),
                Return()],
              orelse=[]),
            Assign(
              targets=[
                Name(id='vehicle_in_database', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='db', ctx=Load()),
                  attr='get_vehicle_by_plate_number',
                  ctx=Load()),
                args=[
                  Name(id='plate_number', ctx=Load())],
                keywords=[])),
            If(
              test=Compare(
                left=Subscript(
                  value=Name(id='vehicle_in_database', ctx=Load()),
                  slice=Constant(value='vehicle_state'),
                  ctx=Load()),
                ops=[
                  Lt()],
                comparators=[
                  Constant(value=0)]),
              body=[
                Assign(
                  targets=[
                    Name(id='message', ctx=Store())],
                  value=Call(
                    func=Name(id='create_message', ctx=Load()),
                    args=[
                      Constant(value=b'SRVR'),
                      Constant(value=b'REMOVEPLATE'),
                      Dict(
                        keys=[
                          Constant(value=b'SUCCESS'),
                          Constant(value=b'REASON')],
                        values=[
                          Call(
                            func=Attribute(
                              value=Constant(value=False),
                              attr='to_bytes',
                              ctx=Load()),
                            args=[
                              Call(
                                func=Attribute(
                                  value=Constant(value=False),
                                  attr='bit_length',
                                  ctx=Load()),
                                args=[],
                                keywords=[]),
                              Constant(value='big')],
                            keywords=[]),
                          Constant(value=b'Vehicle is already deleted')])],
                    keywords=[])),
                Assign(
                  targets=[
                    Name(id='encrypted', ctx=Store())],
                  value=Call(
                    func=Attribute(
                      value=Name(id='self', ctx=Load()),
                      attr='_prepare_message',
                      ctx=Load()),
                    args=[
                      Name(id='message', ctx=Load()),
                      Constant(value=b'REMOVEPLATE'),
                      Name(id='client_public_key', ctx=Load())],
                    keywords=[])),
                Expr(
                  value=Call(
                    func=Attribute(
                      value=Name(id='client', ctx=Load()),
                      attr='send',
                      ctx=Load()),
                    args=[
                      Name(id='encrypted', ctx=Load())],
                    keywords=[])),
                Return()],
              orelse=[]),
            Assign(
              targets=[
                Name(id='deleted', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='db', ctx=Load()),
                  attr='remove_plate',
                  ctx=Load()),
                args=[
                  Name(id='plate_number', ctx=Load())],
                keywords=[])),
            If(
              test=UnaryOp(
                op=Not(),
                operand=Name(id='deleted', ctx=Load())),
              body=[
                Assign(
                  targets=[
                    Name(id='message', ctx=Store())],
                  value=Call(
                    func=Name(id='create_message', ctx=Load()),
                    args=[
                      Constant(value=b'SRVR'),
                      Constant(value=b'REMOVEPLATE'),
                      Dict(
                        keys=[
                          Constant(value=b'SUCCESS'),
                          Constant(value=b'REASON')],
                        values=[
                          Call(
                            func=Attribute(
                              value=Constant(value=False),
                              attr='to_bytes',
                              ctx=Load()),
                            args=[
                              Call(
                                func=Attribute(
                                  value=Constant(value=False),
                                  attr='bit_length',
                                  ctx=Load()),
                                args=[],
                                keywords=[]),
                              Constant(value='big')],
                            keywords=[]),
                          Constant(value=b'Couldnt delete vehicle in db')])],
                    keywords=[])),
                Assign(
                  targets=[
                    Name(id='encrypted', ctx=Store())],
                  value=Call(
                    func=Attribute(
                      value=Name(id='self', ctx=Load()),
                      attr='_prepare_message',
                      ctx=Load()),
                    args=[
                      Name(id='message', ctx=Load()),
                      Constant(value=b'REMOVEPLATE'),
                      Name(id='client_public_key', ctx=Load())],
                    keywords=[])),
                Expr(
                  value=Call(
                    func=Attribute(
                      value=Name(id='client', ctx=Load()),
                      attr='send',
                      ctx=Load()),
                    args=[
                      Name(id='encrypted', ctx=Load())],
                    keywords=[])),
                Return()],
              orelse=[]),
            Expr(
              value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                  Constant(value='WE MADE IT')],
                keywords=[])),
            Assign(
              targets=[
                Name(id='message', ctx=Store())],
              value=Call(
                func=Name(id='create_message', ctx=Load()),
                args=[
                  Constant(value=b'SRVR'),
                  Constant(value=b'REMOVEPLATE'),
                  Dict(
                    keys=[
                      Constant(value=b'SUCCESS')],
                    values=[
                      Call(
                        func=Attribute(
                          value=Constant(value=True),
                          attr='to_bytes',
                          ctx=Load()),
                        args=[
                          Call(
                            func=Attribute(
                              value=Constant(value=True),
                              attr='bit_length',
                              ctx=Load()),
                            args=[],
                            keywords=[]),
                          Constant(value='big')],
                        keywords=[])])],
                keywords=[])),
            Assign(
              targets=[
                Name(id='encrypted', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='self', ctx=Load()),
                  attr='_prepare_message',
                  ctx=Load()),
                args=[
                  Name(id='message', ctx=Load()),
                  Constant(value=b'REMOVEPLATE'),
                  Name(id='client_public_key', ctx=Load())],
                keywords=[])),
            Expr(
              value=Call(
                func=Attribute(
                  value=Name(id='client', ctx=Load()),
                  attr='send',
                  ctx=Load()),
                args=[
                  Name(id='encrypted', ctx=Load())],
                keywords=[]))],
          decorator_list=[
            Call(
              func=Name(id='protocol', ctx=Load()),
              args=[
                Constant(value=b'REMOVEPLATE')],
              keywords=[])]),
        FunctionDef(
          name='_add_company',
          args=arguments(
            posonlyargs=[],
            args=[
              arg(arg='self'),
              arg(arg='client_id'),
              arg(arg='client'),
              arg(arg='data')],
            kwonlyargs=[],
            kw_defaults=[],
            defaults=[]),
          body=[
            Try(
              body=[
                Assign(
                  targets=[
                    Name(id='client_public_key', ctx=Store())],
                  value=Subscript(
                    value=Subscript(
                      value=Attribute(
                        value=Name(id='self', ctx=Load()),
                        attr='_clients',
                        ctx=Load()),
                      slice=Name(id='client_id', ctx=Load()),
                      ctx=Load()),
                    slice=Name(id='RSA_PUBLIC_KEY', ctx=Load()),
                    ctx=Load()))],
              handlers=[
                ExceptHandler(
                  type=Name(id='KeyError', ctx=Load()),
                  body=[
                    Return()])],
              orelse=[],
              finalbody=[]),
            Assign(
              targets=[
                Name(id='parameters', ctx=Store())],
              value=Call(
                func=Name(id='extract_parameters', ctx=Load()),
                args=[
                  Name(id='data', ctx=Load())],
                keywords=[])),
            Assign(
              targets=[
                Name(id='db', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='Database', ctx=Load()),
                  attr='PlateGateDB',
                  ctx=Load()),
                args=[],
                keywords=[])),
            Assign(
              targets=[
                Name(id='inserted_user', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='db', ctx=Load()),
                  attr='insert_into',
                  ctx=Load()),
                args=[
                  Constant(value='users')],
                keywords=[
                  keyword(
                    arg='id_number',
                    value=Call(
                      func=Attribute(
                        value=Subscript(
                          value=Name(id='parameters', ctx=Load()),
                          slice=Constant(value='IDENTIFIER'),
                          ctx=Load()),
                        attr='decode',
                        ctx=Load()),
                      args=[],
                      keywords=[])),
                  keyword(
                    arg='fname',
                    value=Call(
                      func=Attribute(
                        value=Subscript(
                          value=Name(id='parameters', ctx=Load()),
                          slice=Constant(value='FNAME'),
                          ctx=Load()),
                        attr='decode',
                        ctx=Load()),
                      args=[],
                      keywords=[])),
                  keyword(
                    arg='lname',
                    value=Call(
                      func=Attribute(
                        value=Subscript(
                          value=Name(id='parameters', ctx=Load()),
                          slice=Constant(value='LNAME'),
                          ctx=Load()),
                        attr='decode',
                        ctx=Load()),
                      args=[],
                      keywords=[])),
                  keyword(
                    arg='password',
                    value=Call(
                      func=Attribute(
                        value=Subscript(
                          value=Name(id='parameters', ctx=Load()),
                          slice=Constant(value='PASSWORD'),
                          ctx=Load()),
                        attr='decode',
                        ctx=Load()),
                      args=[],
                      keywords=[])),
                  keyword(
                    arg='email',
                    value=Call(
                      func=Attribute(
                        value=Subscript(
                          value=Name(id='parameters', ctx=Load()),
                          slice=Constant(value='EMAIL'),
                          ctx=Load()),
                        attr='decode',
                        ctx=Load()),
                      args=[],
                      keywords=[])),
                  keyword(
                    arg='user_state',
                    value=Constant(value=2))])),
            If(
              test=UnaryOp(
                op=Not(),
                operand=Name(id='inserted_user', ctx=Load())),
              body=[
                Assign(
                  targets=[
                    Name(id='msg', ctx=Store())],
                  value=Call(
                    func=Name(id='create_message', ctx=Load()),
                    args=[
                      Constant(value=b'SRVR'),
                      Constant(value=b'ADDCOMPANY'),
                      Dict(
                        keys=[
                          Constant(value=b'SUCCESS'),
                          Constant(value=b'REASON')],
                        values=[
                          Call(
                            func=Attribute(
                              value=Constant(value=False),
                              attr='to_bytes',
                              ctx=Load()),
                            args=[
                              Call(
                                func=Attribute(
                                  value=Constant(value=False),
                                  attr='bit_length',
                                  ctx=Load()),
                                args=[],
                                keywords=[]),
                              Constant(value='big')],
                            keywords=[]),
                          Constant(value=b"Couldn't insert client")])],
                    keywords=[])),
                Assign(
                  targets=[
                    Name(id='encrypted', ctx=Store())],
                  value=Call(
                    func=Attribute(
                      value=Name(id='self', ctx=Load()),
                      attr='_prepare_message',
                      ctx=Load()),
                    args=[
                      Name(id='msg', ctx=Load()),
                      Constant(value=b'ADDCOMPANY'),
                      Name(id='client_public_key', ctx=Load())],
                    keywords=[])),
                Expr(
                  value=Call(
                    func=Attribute(
                      value=Name(id='client', ctx=Load()),
                      attr='send',
                      ctx=Load()),
                    args=[
                      Name(id='encrypted', ctx=Load())],
                    keywords=[])),
                Return()],
              orelse=[]),
            Assign(
              targets=[
                Name(id='inserted_company', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='db', ctx=Load()),
                  attr='insert_into',
                  ctx=Load()),
                args=[
                  Constant(value='companies')],
                keywords=[
                  keyword(
                    arg='company_name',
                    value=Call(
                      func=Attribute(
                        value=Subscript(
                          value=Name(id='parameters', ctx=Load()),
                          slice=Constant(value='COMPANY_NAME'),
                          ctx=Load()),
                        attr='decode',
                        ctx=Load()),
                      args=[],
                      keywords=[])),
                  keyword(
                    arg='manager_id',
                    value=Call(
                      func=Attribute(
                        value=Subscript(
                          value=Name(id='parameters', ctx=Load()),
                          slice=Constant(value='IDENTIFIER'),
                          ctx=Load()),
                        attr='decode',
                        ctx=Load()),
                      args=[],
                      keywords=[]))])),
            If(
              test=UnaryOp(
                op=Not(),
                operand=Name(id='inserted_company', ctx=Load())),
              body=[
                Assign(
                  targets=[
                    Name(id='msg', ctx=Store())],
                  value=Call(
                    func=Name(id='create_message', ctx=Load()),
                    args=[
                      Constant(value=b'SRVR'),
                      Constant(value=b'ADDCOMPANY'),
                      Dict(
                        keys=[
                          Constant(value=b'SUCCESS'),
                          Constant(value=b'REASON')],
                        values=[
                          Call(
                            func=Attribute(
                              value=Constant(value=False),
                              attr='to_bytes',
                              ctx=Load()),
                            args=[
                              Call(
                                func=Attribute(
                                  value=Constant(value=False),
                                  attr='bit_length',
                                  ctx=Load()),
                                args=[],
                                keywords=[]),
                              Constant(value='big')],
                            keywords=[]),
                          Constant(value=b"Couldn't insert comppany")])],
                    keywords=[])),
                Assign(
                  targets=[
                    Name(id='encrypted', ctx=Store())],
                  value=Call(
                    func=Attribute(
                      value=Name(id='self', ctx=Load()),
                      attr='_prepare_message',
                      ctx=Load()),
                    args=[
                      Name(id='msg', ctx=Load()),
                      Constant(value=b'ADDCOMPANY'),
                      Name(id='client_public_key', ctx=Load())],
                    keywords=[])),
                Expr(
                  value=Call(
                    func=Attribute(
                      value=Name(id='client', ctx=Load()),
                      attr='send',
                      ctx=Load()),
                    args=[
                      Name(id='encrypted', ctx=Load())],
                    keywords=[])),
                Return()],
              orelse=[]),
            Assign(
              targets=[
                Name(id='company_id', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='db', ctx=Load()),
                  attr='get_company_by_manager_id',
                  ctx=Load()),
                args=[
                  Call(
                    func=Attribute(
                      value=Subscript(
                        value=Name(id='parameters', ctx=Load()),
                        slice=Constant(value='IDENTIFIER'),
                        ctx=Load()),
                      attr='decode',
                      ctx=Load()),
                    args=[],
                    keywords=[])],
                keywords=[])),
            Assign(
              targets=[
                Name(id='updated', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='db', ctx=Load()),
                  attr='update',
                  ctx=Load()),
                args=[
                  Constant(value='users')],
                keywords=[
                  keyword(
                    arg='id_number',
                    value=Call(
                      func=Attribute(
                        value=Subscript(
                          value=Name(id='parameters', ctx=Load()),
                          slice=Constant(value='IDENTIFIER'),
                          ctx=Load()),
                        attr='decode',
                        ctx=Load()),
                      args=[],
                      keywords=[])),
                  keyword(
                    arg='company_id',
                    value=Name(id='company_id', ctx=Load()))])),
            If(
              test=UnaryOp(
                op=Not(),
                operand=Name(id='updated', ctx=Load())),
              body=[
                Assign(
                  targets=[
                    Name(id='msg', ctx=Store())],
                  value=Call(
                    func=Name(id='create_message', ctx=Load()),
                    args=[
                      Constant(value=b'SRVR'),
                      Constant(value=b'ADDCOMPANY'),
                      Dict(
                        keys=[
                          Constant(value=b'SUCCESS'),
                          Constant(value=b'REASON')],
                        values=[
                          Call(
                            func=Attribute(
                              value=Constant(value=False),
                              attr='to_bytes',
                              ctx=Load()),
                            args=[
                              Call(
                                func=Attribute(
                                  value=Constant(value=False),
                                  attr='bit_length',
                                  ctx=Load()),
                                args=[],
                                keywords=[]),
                              Constant(value='big')],
                            keywords=[]),
                          Constant(value=b"Couldn't update user")])],
                    keywords=[])),
                Assign(
                  targets=[
                    Name(id='encrypted', ctx=Store())],
                  value=Call(
                    func=Attribute(
                      value=Name(id='self', ctx=Load()),
                      attr='_prepare_message',
                      ctx=Load()),
                    args=[
                      Name(id='msg', ctx=Load()),
                      Constant(value=b'ADDCOMPANY'),
                      Name(id='client_public_key', ctx=Load())],
                    keywords=[])),
                Expr(
                  value=Call(
                    func=Attribute(
                      value=Name(id='client', ctx=Load()),
                      attr='send',
                      ctx=Load()),
                    args=[
                      Name(id='encrypted', ctx=Load())],
                    keywords=[])),
                Return()],
              orelse=[]),
            Assign(
              targets=[
                Name(id='msg', ctx=Store())],
              value=Call(
                func=Name(id='create_message', ctx=Load()),
                args=[
                  Constant(value=b'SRVR'),
                  Constant(value=b'ADDCOMPANY'),
                  Dict(
                    keys=[
                      Constant(value=b'SUCCESS'),
                      Constant(value=b'COMPANY_ID')],
                    values=[
                      Call(
                        func=Attribute(
                          value=Constant(value=True),
                          attr='to_bytes',
                          ctx=Load()),
                        args=[
                          Call(
                            func=Attribute(
                              value=Constant(value=True),
                              attr='bit_length',
                              ctx=Load()),
                            args=[],
                            keywords=[]),
                          Constant(value='big')],
                        keywords=[]),
                      Call(
                        func=Attribute(
                          value=Name(id='company_id', ctx=Load()),
                          attr='to_bytes',
                          ctx=Load()),
                        args=[
                          Call(
                            func=Attribute(
                              value=Name(id='company_id', ctx=Load()),
                              attr='bit_length',
                              ctx=Load()),
                            args=[],
                            keywords=[]),
                          Constant(value='big')],
                        keywords=[])])],
                keywords=[])),
            Assign(
              targets=[
                Name(id='encrypted', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='self', ctx=Load()),
                  attr='_prepare_message',
                  ctx=Load()),
                args=[
                  Name(id='msg', ctx=Load()),
                  Constant(value=b'ADDCOMPANY'),
                  Name(id='client_public_key', ctx=Load())],
                keywords=[])),
            Expr(
              value=Call(
                func=Attribute(
                  value=Name(id='client', ctx=Load()),
                  attr='send',
                  ctx=Load()),
                args=[
                  Name(id='encrypted', ctx=Load())],
                keywords=[])),
            Return()],
          decorator_list=[
            Call(
              func=Name(id='protocol', ctx=Load()),
              args=[
                Constant(value=b'ADDCOMPANY')],
              keywords=[])]),
        FunctionDef(
          name='_get_entries',
          args=arguments(
            posonlyargs=[],
            args=[
              arg(arg='self'),
              arg(arg='client_id'),
              arg(arg='client'),
              arg(arg='data')],
            kwonlyargs=[],
            kw_defaults=[],
            defaults=[]),
          body=[
            Try(
              body=[
                Assign(
                  targets=[
                    Name(id='client_public_key', ctx=Store())],
                  value=Subscript(
                    value=Subscript(
                      value=Attribute(
                        value=Name(id='self', ctx=Load()),
                        attr='_clients',
                        ctx=Load()),
                      slice=Name(id='client_id', ctx=Load()),
                      ctx=Load()),
                    slice=Name(id='RSA_PUBLIC_KEY', ctx=Load()),
                    ctx=Load()))],
              handlers=[
                ExceptHandler(
                  type=Name(id='KeyError', ctx=Load()),
                  body=[
                    Return()])],
              orelse=[],
              finalbody=[]),
            Assign(
              targets=[
                Name(id='parameters', ctx=Store())],
              value=Call(
                func=Name(id='extract_parameters', ctx=Load()),
                args=[
                  Name(id='data', ctx=Load())],
                keywords=[])),
            Assign(
              targets=[
                Name(id='db', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='Database', ctx=Load()),
                  attr='PlateGateDB',
                  ctx=Load()),
                args=[],
                keywords=[])),
            Assign(
              targets=[
                Name(id='requesting_user_id', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Subscript(
                    value=Name(id='parameters', ctx=Load()),
                    slice=Constant(value='MANAGER_ID'),
                    ctx=Load()),
                  attr='decode',
                  ctx=Load()),
                args=[],
                keywords=[])),
            Assign(
              targets=[
                Name(id='requesting_user', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='db', ctx=Load()),
                  attr='get_user_by_id',
                  ctx=Load()),
                args=[
                  Name(id='requesting_user_id', ctx=Load())],
                keywords=[])),
            If(
              test=Compare(
                left=Subscript(
                  value=Name(id='requesting_user', ctx=Load()),
                  slice=Constant(value='user_state'),
                  ctx=Load()),
                ops=[
                  Lt()],
                comparators=[
                  Constant(value=2)]),
              body=[
                Assign(
                  targets=[
                    Name(id='msg', ctx=Store())],
                  value=Call(
                    func=Name(id='create_message', ctx=Load()),
                    args=[
                      Constant(value=b'SRVR'),
                      Constant(value=b'GETENTRIES'),
                      Dict(
                        keys=[
                          Constant(value=b'SUCCESS'),
                          Constant(value=b'REASON')],
                        values=[
                          Call(
                            func=Attribute(
                              value=Constant(value=False),
                              attr='to_bytes',
                              ctx=Load()),
                            args=[
                              Call(
                                func=Attribute(
                                  value=Constant(value=False),
                                  attr='bit_length',
                                  ctx=Load()),
                                args=[],
                                keywords=[]),
                              Constant(value='big')],
                            keywords=[]),
                          Constant(value=b'Unauthorized to do such actions')])],
                    keywords=[])),
                Assign(
                  targets=[
                    Name(id='encrypted', ctx=Store())],
                  value=Call(
                    func=Attribute(
                      value=Name(id='self', ctx=Load()),
                      attr='_prepare_message',
                      ctx=Load()),
                    args=[
                      Name(id='msg', ctx=Load()),
                      Constant(value=b'GETENTRIES'),
                      Name(id='client_public_key', ctx=Load())],
                    keywords=[])),
                Expr(
                  value=Call(
                    func=Attribute(
                      value=Name(id='client', ctx=Load()),
                      attr='send',
                      ctx=Load()),
                    args=[
                      Name(id='encrypted', ctx=Load())],
                    keywords=[])),
                Return()],
              orelse=[]),
            Assign(
              targets=[
                Tuple(
                  elts=[
                    Name(id='company_name', ctx=Store()),
                    Name(id='company_id', ctx=Store())],
                  ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='db', ctx=Load()),
                  attr='get_company_by_user_id',
                  ctx=Load()),
                args=[
                  Name(id='requesting_user_id', ctx=Load())],
                keywords=[])),
            Assign(
              targets=[
                Name(id='entries', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='db', ctx=Load()),
                  attr='get_entries_by_company_id',
                  ctx=Load()),
                args=[
                  Name(id='company_id', ctx=Load())],
                keywords=[])),
            FunctionDef(
              name='get_full_name_of_user',
              args=arguments(
                posonlyargs=[],
                args=[
                  arg(arg='user_id')],
                kwonlyargs=[],
                kw_defaults=[],
                defaults=[]),
              body=[
                Assign(
                  targets=[
                    Name(id='user', ctx=Store())],
                  value=Call(
                    func=Attribute(
                      value=Name(id='db', ctx=Load()),
                      attr='get_user_by_id',
                      ctx=Load()),
                    args=[
                      Name(id='user_id', ctx=Load())],
                    keywords=[])),
                Return(
                  value=JoinedStr(
                    values=[
                      FormattedValue(
                        value=Subscript(
                          value=Name(id='user', ctx=Load()),
                          slice=Constant(value='fname'),
                          ctx=Load()),
                        conversion=-1),
                      Constant(value=' '),
                      FormattedValue(
                        value=Subscript(
                          value=Name(id='user', ctx=Load()),
                          slice=Constant(value='lname'),
                          ctx=Load()),
                        conversion=-1)]))],
              decorator_list=[]),
            For(
              target=Name(id='entry', ctx=Store()),
              iter=Name(id='entries', ctx=Load()),
              body=[
                Expr(
                  value=Call(
                    func=Attribute(
                      value=Name(id='entry', ctx=Load()),
                      attr='pop',
                      ctx=Load()),
                    args=[
                      Constant(value='company_id')],
                    keywords=[])),
                Assign(
                  targets=[
                    Subscript(
                      value=Name(id='entry', ctx=Load()),
                      slice=Constant(value='company_name'),
                      ctx=Store())],
                  value=Name(id='company_name', ctx=Load())),
                Assign(
                  targets=[
                    Subscript(
                      value=Name(id='entry', ctx=Load()),
                      slice=Constant(value='full_name'),
                      ctx=Store())],
                  value=Call(
                    func=Name(id='get_full_name_of_user', ctx=Load()),
                    args=[
                      Subscript(
                        value=Name(id='entry', ctx=Load()),
                        slice=Constant(value='person_id'),
                        ctx=Load())],
                    keywords=[]))],
              orelse=[]),
            Assign(
              targets=[
                Name(id='port', ctx=Store())],
              value=Constant(value=1357)),
            Assign(
              targets=[
                Name(id='sock', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='socket', ctx=Load()),
                  attr='socket',
                  ctx=Load()),
                args=[
                  Attribute(
                    value=Name(id='socket', ctx=Load()),
                    attr='AF_INET',
                    ctx=Load()),
                  Attribute(
                    value=Name(id='socket', ctx=Load()),
                    attr='SOCK_STREAM',
                    ctx=Load())],
                keywords=[])),
            If(
              test=Compare(
                left=Subscript(
                  value=Attribute(
                    value=Name(id='sys', ctx=Load()),
                    attr='platform',
                    ctx=Load()),
                  slice=Slice(
                    upper=Constant(value=5)),
                  ctx=Load()),
                ops=[
                  Eq()],
                comparators=[
                  Constant(value='linux')]),
              body=[
                Expr(
                  value=Call(
                    func=Attribute(
                      value=Name(id='sock', ctx=Load()),
                      attr='setsockopt',
                      ctx=Load()),
                    args=[
                      Attribute(
                        value=Name(id='socket', ctx=Load()),
                        attr='SOL_SOCKET',
                        ctx=Load()),
                      Attribute(
                        value=Name(id='socket', ctx=Load()),
                        attr='SO_REUSEADDR',
                        ctx=Load()),
                      Constant(value=1)],
                    keywords=[])),
                Expr(
                  value=Call(
                    func=Attribute(
                      value=Name(id='sock', ctx=Load()),
                      attr='setsockopt',
                      ctx=Load()),
                    args=[
                      Attribute(
                        value=Name(id='socket', ctx=Load()),
                        attr='SOL_SOCKET',
                        ctx=Load()),
                      Attribute(
                        value=Name(id='socket', ctx=Load()),
                        attr='SO_REUSEPORT',
                        ctx=Load()),
                      Constant(value=1)],
                    keywords=[]))],
              orelse=[]),
            Expr(
              value=Call(
                func=Attribute(
                  value=Name(id='sock', ctx=Load()),
                  attr='bind',
                  ctx=Load()),
                args=[
                  Tuple(
                    elts=[
                      Constant(value='0.0.0.0'),
                      Name(id='port', ctx=Load())],
                    ctx=Load())],
                keywords=[])),
            Expr(
              value=Call(
                func=Attribute(
                  value=Name(id='sock', ctx=Load()),
                  attr='listen',
                  ctx=Load()),
                args=[],
                keywords=[])),
            Assign(
              targets=[
                Name(id='message', ctx=Store())],
              value=Call(
                func=Name(id='create_message', ctx=Load()),
                args=[
                  Constant(value=b'SRVR'),
                  Constant(value=b'GETENTRIES'),
                  Dict(
                    keys=[
                      Constant(value=b'SUCCESS'),
                      Constant(value=b'STATE')],
                    values=[
                      Call(
                        func=Attribute(
                          value=Constant(value=True),
                          attr='to_bytes',
                          ctx=Load()),
                        args=[
                          Call(
                            func=Attribute(
                              value=Constant(value=True),
                              attr='bit_length',
                              ctx=Load()),
                            args=[],
                            keywords=[]),
                          Constant(value='big')],
                        keywords=[]),
                      Constant(value=b'SENDING_ENTRIES')])],
                keywords=[])),
            Assign(
              targets=[
                Name(id='encrypted', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='self', ctx=Load()),
                  attr='_prepare_message',
                  ctx=Load()),
                args=[
                  Name(id='message', ctx=Load()),
                  Constant(value=b'GETENTRIES'),
                  Name(id='client_public_key', ctx=Load())],
                keywords=[])),
            Expr(
              value=Call(
                func=Attribute(
                  value=Name(id='client', ctx=Load()),
                  attr='send',
                  ctx=Load()),
                args=[
                  Name(id='encrypted', ctx=Load())],
                keywords=[])),
            Assign(
              targets=[
                Tuple(
                  elts=[
                    Name(id='entries_client', ctx=Store()),
                    Name(id='client_addr', ctx=Store())],
                  ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='sock', ctx=Load()),
                  attr='accept',
                  ctx=Load()),
                args=[],
                keywords=[])),
            Assign(
              targets=[
                Name(id='new_client_id', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Call(
                    func=Attribute(
                      value=Name(id='hashlib', ctx=Load()),
                      attr='sha256',
                      ctx=Load()),
                    args=[
                      Call(
                        func=Attribute(
                          value=Call(
                            func=Name(id='str', ctx=Load()),
                            args=[
                              Subscript(
                                value=Name(id='client_addr', ctx=Load()),
                                slice=Constant(value=0),
                                ctx=Load())],
                            keywords=[]),
                          attr='encode',
                          ctx=Load()),
                        args=[],
                        keywords=[])],
                    keywords=[]),
                  attr='hexdigest',
                  ctx=Load()),
                args=[],
                keywords=[])),
            While(
              test=Compare(
                left=Name(id='new_client_id', ctx=Load()),
                ops=[
                  NotEq()],
                comparators=[
                  Name(id='client_id', ctx=Load())]),
              body=[
                Expr(
                  value=Call(
                    func=Attribute(
                      value=Name(id='entries_client', ctx=Load()),
                      attr='close',
                      ctx=Load()),
                    args=[],
                    keywords=[])),
                Assign(
                  targets=[
                    Tuple(
                      elts=[
                        Name(id='entries_client', ctx=Store()),
                        Name(id='client_addr', ctx=Store())],
                      ctx=Store())],
                  value=Call(
                    func=Attribute(
                      value=Name(id='sock', ctx=Load()),
                      attr='accept',
                      ctx=Load()),
                    args=[],
                    keywords=[])),
                Assign(
                  targets=[
                    Name(id='new_client_id', ctx=Store())],
                  value=Call(
                    func=Attribute(
                      value=Call(
                        func=Attribute(
                          value=Name(id='hashlib', ctx=Load()),
                          attr='sha256',
                          ctx=Load()),
                        args=[
                          Call(
                            func=Attribute(
                              value=Call(
                                func=Name(id='str', ctx=Load()),
                                args=[
                                  Subscript(
                                    value=Name(id='client_addr', ctx=Load()),
                                    slice=Constant(value=0),
                                    ctx=Load())],
                                keywords=[]),
                              attr='encode',
                              ctx=Load()),
                            args=[],
                            keywords=[])],
                        keywords=[]),
                      attr='hexdigest',
                      ctx=Load()),
                    args=[],
                    keywords=[]))],
              orelse=[]),
            For(
              target=Name(id='entry', ctx=Store()),
              iter=Name(id='entries', ctx=Load()),
              body=[
                Assign(
                  targets=[
                    Name(id='message', ctx=Store())],
                  value=Call(
                    func=Name(id='create_message', ctx=Load()),
                    args=[
                      Constant(value=b'SRVR'),
                      Constant(value=b'GETENTRIES'),
                      Dict(
                        keys=[
                          Constant(value=b'ENTRY_ID'),
                          Constant(value=b'TIME'),
                          Constant(value=b'PERSON_ID'),
                          Constant(value=b'PERSON_NAME'),
                          Constant(value=b'PLATE_NUMBER'),
                          Constant(value=b'COMPANY_NAME')],
                        values=[
                          Call(
                            func=Attribute(
                              value=Call(
                                func=Name(id='str', ctx=Load()),
                                args=[
                                  Subscript(
                                    value=Name(id='entry', ctx=Load()),
                                    slice=Constant(value='entry_id'),
                                    ctx=Load())],
                                keywords=[]),
                              attr='encode',
                              ctx=Load()),
                            args=[],
                            keywords=[]),
                          Call(
                            func=Attribute(
                              value=Subscript(
                                value=Name(id='entry', ctx=Load()),
                                slice=Constant(value='time_readable'),
                                ctx=Load()),
                              attr='encode',
                              ctx=Load()),
                            args=[],
                            keywords=[]),
                          Call(
                            func=Attribute(
                              value=Call(
                                func=Name(id='str', ctx=Load()),
                                args=[
                                  Subscript(
                                    value=Name(id='entry', ctx=Load()),
                                    slice=Constant(value='person_id'),
                                    ctx=Load())],
                                keywords=[]),
                              attr='encode',
                              ctx=Load()),
                            args=[],
                            keywords=[]),
                          Call(
                            func=Attribute(
                              value=Subscript(
                                value=Name(id='entry', ctx=Load()),
                                slice=Constant(value='full_name'),
                                ctx=Load()),
                              attr='encode',
                              ctx=Load()),
                            args=[],
                            keywords=[]),
                          Call(
                            func=Attribute(
                              value=Call(
                                func=Name(id='str', ctx=Load()),
                                args=[
                                  Subscript(
                                    value=Name(id='entry', ctx=Load()),
                                    slice=Constant(value='car_id'),
                                    ctx=Load())],
                                keywords=[]),
                              attr='encode',
                              ctx=Load()),
                            args=[],
                            keywords=[]),
                          Call(
                            func=Attribute(
                              value=Subscript(
                                value=Name(id='entry', ctx=Load()),
                                slice=Constant(value='company_name'),
                                ctx=Load()),
                              attr='encode',
                              ctx=Load()),
                            args=[],
                            keywords=[])])],
                    keywords=[])),
                Assign(
                  targets=[
                    Name(id='encrypted', ctx=Store())],
                  value=Call(
                    func=Attribute(
                      value=Name(id='self', ctx=Load()),
                      attr='_prepare_message',
                      ctx=Load()),
                    args=[
                      Name(id='message', ctx=Load()),
                      Constant(value=b'GETENTRIES'),
                      Name(id='client_public_key', ctx=Load())],
                    keywords=[])),
                Expr(
                  value=Call(
                    func=Attribute(
                      value=Name(id='entries_client', ctx=Load()),
                      attr='send',
                      ctx=Load()),
                    args=[
                      Name(id='encrypted', ctx=Load())],
                    keywords=[])),
                Expr(
                  value=Call(
                    func=Attribute(
                      value=Name(id='time', ctx=Load()),
                      attr='sleep',
                      ctx=Load()),
                    args=[
                      Constant(value=0.01)],
                    keywords=[]))],
              orelse=[]),
            Assign(
              targets=[
                Name(id='message', ctx=Store())],
              value=Call(
                func=Name(id='create_message', ctx=Load()),
                args=[
                  Constant(value=b'SRVR'),
                  Constant(value=b'GETENTRIES'),
                  Dict(
                    keys=[
                      Constant(value=b'SUCCESS'),
                      Constant(value=b'STATE')],
                    values=[
                      Call(
                        func=Attribute(
                          value=Constant(value=True),
                          attr='to_bytes',
                          ctx=Load()),
                        args=[
                          Call(
                            func=Attribute(
                              value=Constant(value=True),
                              attr='bit_length',
                              ctx=Load()),
                            args=[],
                            keywords=[]),
                          Constant(value='big')],
                        keywords=[]),
                      Constant(value=b'FINISHED')])],
                keywords=[])),
            Assign(
              targets=[
                Name(id='encrypted', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='self', ctx=Load()),
                  attr='_prepare_message',
                  ctx=Load()),
                args=[
                  Name(id='message', ctx=Load()),
                  Constant(value=b'GETENTRIES'),
                  Name(id='client_public_key', ctx=Load())],
                keywords=[])),
            Expr(
              value=Call(
                func=Attribute(
                  value=Name(id='entries_client', ctx=Load()),
                  attr='send',
                  ctx=Load()),
                args=[
                  Name(id='encrypted', ctx=Load())],
                keywords=[])),
            Expr(
              value=Call(
                func=Attribute(
                  value=Name(id='time', ctx=Load()),
                  attr='sleep',
                  ctx=Load()),
                args=[
                  Constant(value=0.1)],
                keywords=[]))],
          decorator_list=[
            Call(
              func=Name(id='protocol', ctx=Load()),
              args=[
                Constant(value=b'GETENTRIES')],
              keywords=[])]),
        FunctionDef(
          name='_prepare_message',
          args=arguments(
            posonlyargs=[],
            args=[
              arg(
                arg='message',
                annotation=Name(id='bytes', ctx=Load())),
              arg(
                arg='method',
                annotation=Name(id='bytes', ctx=Load())),
              arg(arg='client_public_key')],
            kwonlyargs=[],
            kw_defaults=[],
            defaults=[]),
          body=[
            Assign(
              targets=[
                Name(id='padder', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Call(
                    func=Attribute(
                      value=Name(id='padding', ctx=Load()),
                      attr='PKCS7',
                      ctx=Load()),
                    args=[
                      Constant(value=128)],
                    keywords=[]),
                  attr='padder',
                  ctx=Load()),
                args=[],
                keywords=[])),
            Assign(
              targets=[
                Name(id='padded_msg', ctx=Store())],
              value=BinOp(
                left=Call(
                  func=Attribute(
                    value=Name(id='padder', ctx=Load()),
                    attr='update',
                    ctx=Load()),
                  args=[
                    Name(id='message', ctx=Load())],
                  keywords=[]),
                op=Add(),
                right=Call(
                  func=Attribute(
                    value=Name(id='padder', ctx=Load()),
                    attr='finalize',
                    ctx=Load()),
                  args=[],
                  keywords=[]))),
            Assign(
              targets=[
                Name(id='aes_key', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='os', ctx=Load()),
                  attr='urandom',
                  ctx=Load()),
                args=[
                  Constant(value=16)],
                keywords=[])),
            Assign(
              targets=[
                Name(id='iv', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='os', ctx=Load()),
                  attr='urandom',
                  ctx=Load()),
                args=[
                  Constant(value=16)],
                keywords=[])),
            Assign(
              targets=[
                Name(id='aes_info', ctx=Store())],
              value=Call(
                func=Name(id='create_message', ctx=Load()),
                args=[
                  Constant(value=b'SRVR'),
                  Name(id='method', ctx=Load()),
                  Dict(
                    keys=[
                      Constant(value=b'AES_KEY'),
                      Constant(value=b'IVECTOR')],
                    values=[
                      Name(id='aes_key', ctx=Load()),
                      Name(id='iv', ctx=Load())])],
                keywords=[])),
            Assign(
              targets=[
                Name(id='encrypted_info', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='rsa', ctx=Load()),
                  attr='encrypt',
                  ctx=Load()),
                args=[
                  Name(id='aes_info', ctx=Load()),
                  Name(id='client_public_key', ctx=Load())],
                keywords=[])),
            Assign(
              targets=[
                Name(id='aes', ctx=Store())],
              value=Call(
                func=Name(id='Cipher', ctx=Load()),
                args=[
                  Call(
                    func=Attribute(
                      value=Name(id='algorithms', ctx=Load()),
                      attr='AES',
                      ctx=Load()),
                    args=[
                      Name(id='aes_key', ctx=Load())],
                    keywords=[])],
                keywords=[
                  keyword(
                    arg='mode',
                    value=Call(
                      func=Attribute(
                        value=Name(id='modes', ctx=Load()),
                        attr='CBC',
                        ctx=Load()),
                      args=[
                        Name(id='iv', ctx=Load())],
                      keywords=[]))])),
            Assign(
              targets=[
                Name(id='encryptor', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='aes', ctx=Load()),
                  attr='encryptor',
                  ctx=Load()),
                args=[],
                keywords=[])),
            Assign(
              targets=[
                Name(id='encrypted_message', ctx=Store())],
              value=BinOp(
                left=Call(
                  func=Attribute(
                    value=Name(id='encryptor', ctx=Load()),
                    attr='update',
                    ctx=Load()),
                  args=[
                    Name(id='padded_msg', ctx=Load())],
                  keywords=[]),
                op=Add(),
                right=Call(
                  func=Attribute(
                    value=Name(id='encryptor', ctx=Load()),
                    attr='finalize',
                    ctx=Load()),
                  args=[],
                  keywords=[]))),
            Return(
              value=BinOp(
                left=BinOp(
                  left=BinOp(
                    left=Name(id='encrypted_info', ctx=Load()),
                    op=Add(),
                    right=Name(id='MESSAGE_HALF', ctx=Load())),
                  op=Add(),
                  right=Name(id='encrypted_message', ctx=Load())),
                op=Add(),
                right=Name(id='MESSAGE_END', ctx=Load())))],
          decorator_list=[
            Name(id='staticmethod', ctx=Load())],
          returns=Name(id='bytes', ctx=Load())),
        FunctionDef(
          name='_handle_client',
          args=arguments(
            posonlyargs=[],
            args=[
              arg(arg='self'),
              arg(arg='client'),
              arg(arg='addr')],
            kwonlyargs=[],
            kw_defaults=[],
            defaults=[]),
          body=[
            Assign(
              targets=[
                Name(id='client_id', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Call(
                    func=Attribute(
                      value=Name(id='hashlib', ctx=Load()),
                      attr='sha256',
                      ctx=Load()),
                    args=[
                      Call(
                        func=Attribute(
                          value=Call(
                            func=Name(id='str', ctx=Load()),
                            args=[
                              Subscript(
                                value=Name(id='addr', ctx=Load()),
                                slice=Constant(value=0),
                                ctx=Load())],
                            keywords=[]),
                          attr='encode',
                          ctx=Load()),
                        args=[],
                        keywords=[])],
                    keywords=[]),
                  attr='hexdigest',
                  ctx=Load()),
                args=[],
                keywords=[])),
            If(
              test=Compare(
                left=Name(id='client_id', ctx=Load()),
                ops=[
                  NotIn()],
                comparators=[
                  Call(
                    func=Attribute(
                      value=Attribute(
                        value=Name(id='self', ctx=Load()),
                        attr='_clients',
                        ctx=Load()),
                      attr='keys',
                      ctx=Load()),
                    args=[],
                    keywords=[])]),
              body=[
                Assign(
                  targets=[
                    Subscript(
                      value=Attribute(
                        value=Name(id='self', ctx=Load()),
                        attr='_clients',
                        ctx=Load()),
                      slice=Name(id='client_id', ctx=Load()),
                      ctx=Store())],
                  value=Dict(keys=[], values=[]))],
              orelse=[]),
            Assign(
              targets=[
                Name(id='data', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='client', ctx=Load()),
                  attr='recv',
                  ctx=Load()),
                args=[
                  Constant(value=1024)],
                keywords=[])),
            While(
              test=UnaryOp(
                op=Not(),
                operand=Compare(
                  left=Subscript(
                    value=Name(id='data', ctx=Load()),
                    slice=Slice(
                      lower=UnaryOp(
                        op=USub(),
                        operand=Call(
                          func=Name(id='len', ctx=Load()),
                          args=[
                            Name(id='MESSAGE_END', ctx=Load())],
                          keywords=[]))),
                    ctx=Load()),
                  ops=[
                    Eq()],
                  comparators=[
                    Name(id='MESSAGE_END', ctx=Load())])),
              body=[
                AugAssign(
                  target=Name(id='data', ctx=Store()),
                  op=Add(),
                  value=Call(
                    func=Attribute(
                      value=Name(id='client', ctx=Load()),
                      attr='recv',
                      ctx=Load()),
                    args=[
                      Constant(value=1024)],
                    keywords=[]))],
              orelse=[]),
            Assign(
              targets=[
                Name(id='data', ctx=Store())],
              value=Subscript(
                value=Name(id='data', ctx=Load()),
                slice=Slice(
                  upper=UnaryOp(
                    op=USub(),
                    operand=Call(
                      func=Name(id='len', ctx=Load()),
                      args=[
                        Name(id='MESSAGE_END', ctx=Load())],
                      keywords=[]))),
                ctx=Load())),
            If(
              test=Compare(
                left=Name(id='MESSAGE_HALF', ctx=Load()),
                ops=[
                  In()],
                comparators=[
                  Name(id='data', ctx=Load())]),
              body=[
                Assign(
                  targets=[
                    Tuple(
                      elts=[
                        Name(id='info', ctx=Store()),
                        Name(id='content', ctx=Store())],
                      ctx=Store())],
                  value=Call(
                    func=Attribute(
                      value=Name(id='data', ctx=Load()),
                      attr='split',
                      ctx=Load()),
                    args=[
                      Name(id='MESSAGE_HALF', ctx=Load())],
                    keywords=[]))],
              orelse=[
                Expr(
                  value=Call(
                    func=Attribute(
                      value=Name(id='self', ctx=Load()),
                      attr='_do_handshake',
                      ctx=Load()),
                    args=[
                      Name(id='client_id', ctx=Load()),
                      Name(id='client', ctx=Load()),
                      Name(id='data', ctx=Load())],
                    keywords=[])),
                Return()]),
            Assign(
              targets=[
                Name(id='decrypted_info', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='rsa', ctx=Load()),
                  attr='decrypt',
                  ctx=Load()),
                args=[
                  Name(id='info', ctx=Load()),
                  Subscript(
                    value=Subscript(
                      value=Attribute(
                        value=Name(id='self', ctx=Load()),
                        attr='_clients',
                        ctx=Load()),
                      slice=Name(id='client_id', ctx=Load()),
                      ctx=Load()),
                    slice=Name(id='RSA_PRIVATE_KEY', ctx=Load()),
                    ctx=Load())],
                keywords=[])),
            Assign(
              targets=[
                Name(id='parameters', ctx=Store())],
              value=Call(
                func=Name(id='extract_parameters', ctx=Load()),
                args=[
                  Name(id='decrypted_info', ctx=Load())],
                keywords=[])),
            Assign(
              targets=[
                Name(id='aes_key', ctx=Store())],
              value=Subscript(
                value=Name(id='parameters', ctx=Load()),
                slice=Constant(value='AES_KEY'),
                ctx=Load())),
            Assign(
              targets=[
                Name(id='iv', ctx=Store())],
              value=Subscript(
                value=Name(id='parameters', ctx=Load()),
                slice=Constant(value='IVECTOR'),
                ctx=Load())),
            Assign(
              targets=[
                Name(id='aes', ctx=Store())],
              value=Call(
                func=Name(id='Cipher', ctx=Load()),
                args=[
                  Call(
                    func=Attribute(
                      value=Name(id='algorithms', ctx=Load()),
                      attr='AES',
                      ctx=Load()),
                    args=[
                      Name(id='aes_key', ctx=Load())],
                    keywords=[])],
                keywords=[
                  keyword(
                    arg='mode',
                    value=Call(
                      func=Attribute(
                        value=Name(id='modes', ctx=Load()),
                        attr='CBC',
                        ctx=Load()),
                      args=[
                        Name(id='iv', ctx=Load())],
                      keywords=[]))])),
            Assign(
              targets=[
                Name(id='decryptor', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Name(id='aes', ctx=Load()),
                  attr='decryptor',
                  ctx=Load()),
                args=[],
                keywords=[])),
            Assign(
              targets=[
                Name(id='unpadder', ctx=Store())],
              value=Call(
                func=Attribute(
                  value=Call(
                    func=Attribute(
                      value=Name(id='padding', ctx=Load()),
                      attr='PKCS7',
                      ctx=Load()),
                    args=[
                      Constant(value=128)],
                    keywords=[]),
                  attr='unpadder',
                  ctx=Load()),
                args=[],
                keywords=[])),
            Assign(
              targets=[
                Name(id='decrypted', ctx=Store())],
              value=BinOp(
                left=Call(
                  func=Attribute(
                    value=Name(id='decryptor', ctx=Load()),
                    attr='update',
                    ctx=Load()),
                  args=[
                    Name(id='content', ctx=Load())],
                  keywords=[]),
                op=Add(),
                right=Call(
                  func=Attribute(
                    value=Name(id='decryptor', ctx=Load()),
                    attr='finalize',
                    ctx=Load()),
                  args=[],
                  keywords=[]))),
            Assign(
              targets=[
                Name(id='decrypted', ctx=Store())],
              value=BinOp(
                left=Call(
                  func=Attribute(
                    value=Name(id='unpadder', ctx=Load()),
                    attr='update',
                    ctx=Load()),
                  args=[
                    Name(id='decrypted', ctx=Load())],
                  keywords=[]),
                op=Add(),
                right=Call(
                  func=Attribute(
                    value=Name(id='unpadder', ctx=Load()),
                    attr='finalize',
                    ctx=Load()),
                  args=[],
                  keywords=[]))),
            If(
              test=UnaryOp(
                op=Not(),
                operand=Compare(
                  left=Subscript(
                    value=Name(id='decrypted_info', ctx=Load()),
                    slice=Slice(
                      upper=Constant(value=4)),
                    ctx=Load()),
                  ops=[
                    In()],
                  comparators=[
                    Attribute(
                      value=Name(id='self', ctx=Load()),
                      attr='KNOWN_CLIENTS',
                      ctx=Load())])),
              body=[
                Expr(
                  value=Call(
                    func=Attribute(
                      value=Name(id='client', ctx=Load()),
                      attr='close',
                      ctx=Load()),
                    args=[],
                    keywords=[])),
                AugAssign(
                  target=Attribute(
                    value=Name(id='self', ctx=Load()),
                    attr='_client_count',
                    ctx=Store()),
                  op=Sub(),
                  value=Constant(value=1)),
                Return()],
              orelse=[]),
            Assign(
              targets=[
                Name(id='function', ctx=Store())],
              value=Subscript(
                value=Call(
                  func=Attribute(
                    value=Subscript(
                      value=Call(
                        func=Attribute(
                          value=Name(id='decrypted_info', ctx=Load()),
                          attr='split',
                          ctx=Load()),
                        args=[
                          Constant(value=b'~~~')],
                        keywords=[]),
                      slice=Constant(value=0),
                      ctx=Load()),
                    attr='split',
                    ctx=Load()),
                  args=[
                    Constant(value=b' ')],
                  keywords=[]),
                slice=Constant(value=1),
                ctx=Load())),
            Expr(
              value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                  Name(id='function', ctx=Load())],
                keywords=[])),
            If(
              test=Compare(
                left=Name(id='function', ctx=Load()),
                ops=[
                  NotIn()],
                comparators=[
                  Attribute(
                    value=Name(id='self', ctx=Load()),
                    attr='KNOWN_REQUESTS',
                    ctx=Load())]),
              body=[
                Expr(
                  value=Call(
                    func=Name(id='print', ctx=Load()),
                    args=[
                      Constant(value='function not exists')],
                    keywords=[])),
                Expr(
                  value=Call(
                    func=Name(id='print', ctx=Load()),
                    args=[
                      Constant(value='closing client')],
                    keywords=[])),
                Expr(
                  value=Call(
                    func=Attribute(
                      value=Name(id='client', ctx=Load()),
                      attr='close',
                      ctx=Load()),
                    args=[],
                    keywords=[])),
                AugAssign(
                  target=Attribute(
                    value=Name(id='self', ctx=Load()),
                    attr='_client_count',
                    ctx=Store()),
                  op=Sub(),
                  value=Constant(value=1)),
                Return()],
              orelse=[]),
            Expr(
              value=Call(
                func=Subscript(
                  value=Attribute(
                    value=Name(id='self', ctx=Load()),
                    attr='KNOWN_REQUESTS',
                    ctx=Load()),
                  slice=Name(id='function', ctx=Load()),
                  ctx=Load()),
                args=[
                  Name(id='client_id', ctx=Load()),
                  Name(id='client', ctx=Load()),
                  Name(id='decrypted', ctx=Load())],
                keywords=[])),
            Expr(
              value=Call(
                func=Attribute(
                  value=Name(id='client', ctx=Load()),
                  attr='close',
                  ctx=Load()),
                args=[],
                keywords=[])),
            AugAssign(
              target=Attribute(
                value=Name(id='self', ctx=Load()),
                attr='_client_count',
                ctx=Store()),
              op=Sub(),
              value=Constant(value=1))],
          decorator_list=[]),
        FunctionDef(
          name='mainloop',
          args=arguments(
            posonlyargs=[],
            args=[
              arg(arg='self')],
            kwonlyargs=[],
            kw_defaults=[],
            defaults=[]),
          body=[
            Expr(
              value=Call(
                func=Attribute(
                  value=Attribute(
                    value=Name(id='self', ctx=Load()),
                    attr='_sock',
                    ctx=Load()),
                  attr='bind',
                  ctx=Load()),
                args=[
                  Tuple(
                    elts=[
                      Constant(value='0.0.0.0'),
                      Attribute(
                        value=Name(id='self', ctx=Load()),
                        attr='PORT',
                        ctx=Load())],
                    ctx=Load())],
                keywords=[])),
            Expr(
              value=Call(
                func=Attribute(
                  value=Attribute(
                    value=Name(id='self', ctx=Load()),
                    attr='_sock',
                    ctx=Load()),
                  attr='listen',
                  ctx=Load()),
                args=[],
                keywords=[])),
            Assign(
              targets=[
                Name(id='threads', ctx=Store())],
              value=List(elts=[], ctx=Load())),
            While(
              test=Compare(
                left=Attribute(
                  value=Name(id='self', ctx=Load()),
                  attr='_client_count',
                  ctx=Load()),
                ops=[
                  LtE()],
                comparators=[
                  Attribute(
                    value=Name(id='self', ctx=Load()),
                    attr='CLIENT_LIMIT',
                    ctx=Load())]),
              body=[
                Expr(
                  value=Call(
                    func=Name(id='print', ctx=Load()),
                    args=[
                      Constant(value='Waiting')],
                    keywords=[])),
                Assign(
                  targets=[
                    Tuple(
                      elts=[
                        Name(id='client', ctx=Store()),
                        Name(id='addr', ctx=Store())],
                      ctx=Store())],
                  value=Call(
                    func=Attribute(
                      value=Attribute(
                        value=Name(id='self', ctx=Load()),
                        attr='_sock',
                        ctx=Load()),
                      attr='accept',
                      ctx=Load()),
                    args=[],
                    keywords=[])),
                Assign(
                  targets=[
                    Name(id='thread', ctx=Store())],
                  value=Call(
                    func=Attribute(
                      value=Name(id='threading', ctx=Load()),
                      attr='Thread',
                      ctx=Load()),
                    args=[],
                    keywords=[
                      keyword(
                        arg='target',
                        value=Attribute(
                          value=Name(id='self', ctx=Load()),
                          attr='_handle_client',
                          ctx=Load())),
                      keyword(
                        arg='args',
                        value=Tuple(
                          elts=[
                            Name(id='client', ctx=Load()),
                            Name(id='addr', ctx=Load())],
                          ctx=Load()))])),
                Expr(
                  value=Call(
                    func=Attribute(
                      value=Name(id='threads', ctx=Load()),
                      attr='append',
                      ctx=Load()),
                    args=[
                      Name(id='thread', ctx=Load())],
                    keywords=[])),
                Expr(
                  value=Call(
                    func=Attribute(
                      value=Name(id='thread', ctx=Load()),
                      attr='start',
                      ctx=Load()),
                    args=[],
                    keywords=[])),
                AugAssign(
                  target=Attribute(
                    value=Name(id='self', ctx=Load()),
                    attr='_client_count',
                    ctx=Store()),
                  op=Add(),
                  value=Constant(value=1))],
              orelse=[]),
            For(
              target=Name(id='thread', ctx=Store()),
              iter=Name(id='threads', ctx=Load()),
              body=[
                Expr(
                  value=Call(
                    func=Attribute(
                      value=Name(id='thread', ctx=Load()),
                      attr='join',
                      ctx=Load()),
                    args=[],
                    keywords=[]))],
              orelse=[]),
            Expr(
              value=Call(
                func=Attribute(
                  value=Attribute(
                    value=Name(id='self', ctx=Load()),
                    attr='_sock',
                    ctx=Load()),
                  attr='close',
                  ctx=Load()),
                args=[],
                keywords=[]))],
          decorator_list=[])],
      decorator_list=[]),
    Assign(
      targets=[
        Name(id='server', ctx=Store())],
      value=Call(
        func=Name(id='Server', ctx=Load()),
        args=[],
        keywords=[])),
    Expr(
      value=Call(
        func=Attribute(
          value=Name(id='server', ctx=Load()),
          attr='mainloop',
          ctx=Load()),
        args=[],
        keywords=[]))],
  type_ignores=[])